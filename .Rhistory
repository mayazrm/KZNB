rndtb2 <- subset(rndt, response.keys == "up")
# standard model
summary(lm(rt~valenceE + trial40c, data = rndtb2))
#random intercept models
intmod <- (lmer(rt ~ valenceE + trial40c + (1 | ID),  data=rndtb2)) # ME valence
summary(lmer(logrt ~ valenceE + trial40c + (1 | ID),  data=rndtb2)) # ME valence
#random intercept & slope
summary(lmer(rt ~ valenceE + trial40c + (valenceE | ID),  data=rndtb2)) # ME valence
summary(lmer(logrt ~ valenceE + trial40c + (valenceE | ID),  data=rndtb2)) # ME valence
anova(intmod, slopemod)
#random intercept & slope of valence and word
summary(lmer(rt ~ valenceE + trial40c + (valenceE | ID) + (1 | word),  data=rndtb2)) # ME valence
summary(lmer(logrt ~ valenceE + trial40c + (valenceE | ID) + (1 | word),  data=rndtb2)) # ME valence
selfrelplot <- ggplot(data=rndtb2, aes(x=valence, y=logrt)) +
geom_jitter(aes(color=as.factor(valence)), position = position_jitter(width = .2), size=1.5) +
labs(title = "Log RT by Valence - Self-Relevant Traits Only", x="id", y="Log RT") +
stat_summary(aes(group=valence), fun.y = mean, geom="point", colour="black", size=2) +
stat_summary(fun.data=mean_cl_boot, geom='errorbar', size = .5) +
scale_color_manual(values=c("orangered3", "green4")) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position='none',
plot.title = element_text(lineheight=.8, face="bold"),
axis.title.y = element_text(face="bold", vjust=0.5),
axis.title.x = element_text(face="bold", vjust=-0.35)) +
facet_wrap(~id)
#ggsave(selfrelplot, file = "selfrelplot.pdf", height = 40/2.54, width = 64/2.54)
####### Updates - Stricter Exclusion Cutoff ######
# trimmed data: removed any < 100 ms and any greater than 2 SD above mean (1.29+.8*2=2.89)
sd(rndtb2$rt) # SD = 0.34
summary(rndtb2$rt) # M = .98
quantile(rndtb2$rt, c(.90, .95, .99))
rndtb <- subset(rndtb2, rt >= .01 & rt < 1.45) #90th percentile or below
mean(rndtb$rt)
median(rndtb$rt)
mean(rndtb$rt[rndtb$valence=="positive"])
mean(rndtb$rt[rndtb$valence=="negative"])
# standard model -- Significant main effect of valence
summary(lm(logrt~valenceE + trial40c, data = rndtb))
summary(lm(rt~valenceE + trial40c, data = rndtb))
#random intercept model
summary(lmer(logrt ~ valenceE + trial40c + (1 | id),  data=rndtb))
summary(lmer(rt ~ valenceE + trial40c + (1 | id),  data=rndtb))
summary(lmer(rt ~ valenceE + trial40c + (1 + valenceE| id),  data=rndtb))
summary(lmer(rt ~ valenceE + trial40c + (1 + valenceE| id) + (1 | word),  data=rndtb))
valenceslope <- (lme(fixed=logrt ~ valenceE + trial40c,  data=rndtb, random= ~ 1 + valenceE + trial40c | id))
summary(lme(fixed=rt ~ valence + trial40c,  data=rndtb, random= ~ 1 + valence + trial40c | id)) #raw rt
valenceslope <- (lme(fixed=logrt ~ valenceE + trial40c,  data=rndtb, random= ~ 1 + valenceE + trial40c | id, random= ~ 1 | word))
valenceslope.raw <- (lme(fixed=rt ~ valenceE + trial40c,  data=rndtb, random= ~ 1 + valenceE + trial40c | id))
summary(valenceslope.raw)
vposranef.raw<- -0.1270142 + ranef(valenceslope.raw)[2]
quantile(vposranef.raw$valence, probs=c(.025, .975))
1000*quantile(vposranef.raw$valence, probs=c(.025, .5, .975))
stripchart(1000*vposranef.raw$valencepositive, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-250, 250), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-150, 60))
vposranef.raw$valence
stripchart(1000*vposranef.raw$valence, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-250, 250), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-150, 60))
vposranef.raw$valence
vposranef.raw
stripchart(1000*vposranef.raw$valencepositive, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-250, 250), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
stripchart(1000*vposranef.raw$valence[positive], pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-250, 250), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
stripchart(1000*vposranef.raw$valence, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-250, 250), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-150, 60))
stripchart(1000*vposranef.raw$valence, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-350, 250), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
vposranef.raw<- -0.1270142 + ranef(valenceslope.raw)[2]
quantile(vposranef.raw$valence, probs=c(.025, .975))
vposranef.raw
stripchart(1000*vposranef.raw, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-350, 250), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
stripchart(1000*vposranef.raw, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-350, 250), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
stripchart(1000*vposranef.raw, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-350, 250), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
summary(valenceslope.raw)
-0.1270142 + 2*0.08375127
stripchart(1000*vposranef.raw, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-350, 100), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
stripchart(1000*vposranef.raw, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-320, 50), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-127, 60))
-0.1270142 - 2*0.08375127
stripchart(1000*vposranef.raw, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-320, 50), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-295, -127, 4))
stripchart(1000*vposranef.raw, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-320, 50), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-295, -127, 4), col = c("red", "black", "red"))
stripchart(1000*vposranef.raw, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-320, 50), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-295, -127, 4), col = c("red", "black", "red"),
lwd = 3)
rndtb2$rt.z <- scale(rndtb2$rt)
sort(rndtb2$rt.z)
rndtz <- subset(rndtb2,  rt.z < 3) #within 3 SD of the mean RT
# standard model -- Significant main effect of valence
summary(lm(logrt~valenceE + trial40c, data = rndtz))
summary(lm(rt~valenceE + trial40c, data = rndtz)) #run on raw rt
#random intercept model
summary(lmer(logrt ~ valenceE + trial40c + (1 | id),  data=rndtz))
summary(lmer(rt ~ valenceE + trial40c + (1 | id),  data=rndtz))
#random intercept & slope of valence
summary(lmer(logrt ~ valenceE + trial40c + (1 + valenceE| id),  data=rndtz))
summary(lmer(rt ~ valenceE + trial40c + (1 + valenceE| id),  data=rndtz))
#random intercept & slope of valence & random effects of time
summary(lmer(logrt ~ valenceE + trial40c + (1 + valenceE + trial40c | id) ,  data=rndtz))
summary(lmer(rt ~ valenceE + trial40c + (1 + valenceE + trial40c| id) ,  data=rndtz))
#random intercept & slope of valence & random effects of time and word
summary(lmer(logrt ~ valenceE + trial40c + (1 + valenceE + trial40c | id) + (1 | word),  data=rndtz))
summary(lmer(rt ~ valenceE + trial40c + (1 + valenceE + trial40c| id) + (1 | word),  data=rndtz))
valenceslope <- (lme(fixed=logrt ~ valenceE + trial40c,  data=rndtb, random= ~ 1 + valenceE + trial40c |id))
summary(lme(fixed=rt ~ valence + trial40c,  data=rndtb2, random= ~ 1 + valence + trial40c | id)) #raw rt
#random intercept & slope of valence and trial: Raw RT
valenceslope.raw <- (lme(fixed=rt ~ valenceE + trial40c,  data=rndtb, random= ~ 1 + valenceE + trial40c | id))
summary(valenceslope.raw)
vposranef.raw<- -0.1270142 + ranef(valenceslope.raw)[2]
quantile(vposranef.raw$valence, probs=c(.025, .975))
1000*quantile(vposranef.raw$valence, probs=c(.025, .5, .975))
stripchart(1000*vposranef.raw, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-320, 50), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-295, -127, 4), col = c("red", "black", "red"),
lwd = 3)
stripchart(1000*vposranef.raw, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-320, 50), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-295, -127, 4), col = c("red", "black", "red"),
lwd = 3)
valenceslope.raw <- (lmer(rt ~ valenceE + trial40c + (1 + valenceE + trial40c| id) + (1 | word),  data=rndtz))
ranef(valenceslope.raw)
valenceslope.raw2 <- (lmer(rt ~ valenceE + trial40c + (1 + valenceE + trial40c| id) + (1 | word),  data=rndtz))
valenceslope.raw <- (lme(fixed=rt ~ valenceE + trial40c,  data=rndtb, random= ~ 1 + valenceE + trial40c | id))
summary(valenceslope.raw)
summary(valenceslope.raw2)
ranef(valenceslope.raw2)[2]
ranef(valenceslope.raw2)$valenceE
ranef(valenceslope.raw2)
ranef(valenceslope.raw2)$id[2]
vposranef.raw2<- -0.167972 + ranef(valenceslope.raw2)$id[2]
vposranef.raw2
quantile(vposranef.raw2$valenceE, probs=c(.025, .975))
1000*quantile(vposranef.raw2$valenceE, probs=c(.025, .5, .975))
stripchart(1000*vposranef.raw2, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-320, 50), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
summary(valenceslope.raw2)
-168+2*0.14725
-.168+2*0.14725
-.168-2*0.14725
stripchart(1000*vposranef.raw2, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-500, 150), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-463, -168, 127), col = c("red", "black", "red"),
lwd = 3)
pdf("random_wave2_dotplot.pdf", width = 16, height = 8)
stripchart(1000*vposranef.raw2, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-500, 150), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-463, -168, 127), col = c("red", "black", "red"),
lwd = 3)
dev.off()
summary(lmer(rt ~ valenceE + trial40c + (1 + valenceE + trial40c| id) + (1 | word),  data=rndtz))
rnd <- read.csv("randomproject_data_aggregated_161021.csv")
library(nlme)
library(lme4)
library(ggplot2)
library(lmerTest)
theme_set(theme_bw(base_size = 14))
#For Bayesian analysis:
library(brms)
#For dotplots
library(Rcmdr)
#### RECODING TIME ####
# so that one unit (-.5, .5) = duration of study
rnd$trial40 <- (rnd$trials.thisN + 1)
rnd$trial40c <- (rnd$trial40 - 20)/40
#### TRIMMING & TRANSFORMING RT ####
# rt density plot
ggplot(rnd, aes(x=response.rt)) +
geom_density()
hist(rnd$response.rt)
# trimmed data: removed any < 100 ms and any greater than 3 SD above mean (1.29+.8*3=3.69)
sd(rnd$response.rt, na.rm=T) # SD = 0.35
summary(rnd$response.rt, na.rm=T) # M = 1.02
#rndt <- subset(rnd, rt >= .01 & rt < 3.69)
rndt <- rnd
##log transform latency scores
rndt$rt <- rndt$response.rt
rndt$logrt <- log(rndt$response.rt)
# log rt density plot - normal !
ggplot(rndt, aes(x=logrt)) +
geom_density()
rndt$id <- rndt$ID
rndt$valenceE <-recode(rndt$valence, as.factor.result=F, '"negative" = -0.5; "positive" = 0.5')
#### ANALYSES without Self-Relevance ####
###
#random intercept & slope for trial number (centered -.5, .5)
summary(lmer(rt ~ trial40c + (trial40c | id),  data=rndt))
### VALENCE EFFECT (objective valence of words)
# simple regression: no main effect of valence on rt
summary(lm(rt ~ valence, rndt)) # significant main effect
#random intercept model - ns fixed
summary(lmer(rt ~ valence + trial40c + (1 | id),  data=rndt)) # ME of valence
#random intercept & slope  - ns fixed
summary(lmer(rt ~ valence + trial40c + (valence + trial40c | id),  data=rndt)) # ME of valence
# plotted:
ggplot(data=rndt, aes(x=valence, y=logrt)) +
geom_jitter(aes(color=as.factor(valence)), position = position_jitter(width = .2), size=1.5) +
labs(title = "Log RT by Valence", x="id", y="Log RT") +
stat_summary(aes(group=id), fun.y = mean, geom="point", colour="black", size=2) +
stat_summary(fun.data=mean_cl_boot, geom='errorbar', size = .5) +
scale_color_manual(values=c("orangered3", "green4")) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position='none',
plot.title = element_text(lineheight=.8, face="bold"),
axis.title.y = element_text(face="bold", vjust=0.5),
axis.title.x = element_text(face="bold", vjust=-0.35)) +
facet_wrap(~id)
##### Only looking at traits rated as self-descriptive ######
rndtb2 <- subset(rndt, response.keys == "up")
# standard model
summary(lm(rt~valenceE + trial40c, data = rndtb2))
#random intercept models
intmod <- (lmer(rt ~ valenceE + trial40c + (1 | ID),  data=rndtb2)) # ME valence
summary(lmer(logrt ~ valenceE + trial40c + (1 | ID),  data=rndtb2)) # ME valence
#random intercept & slope
summary(lmer(rt ~ valenceE + trial40c + (valenceE | ID),  data=rndtb2)) # ME valence
summary(lmer(logrt ~ valenceE + trial40c + (valenceE | ID),  data=rndtb2)) # ME valence
anova(intmod, slopemod)
#random intercept & slope of valence and word
summary(lmer(rt ~ valenceE + trial40c + (valenceE | ID) + (1 | word),  data=rndtb2)) # ME valence
summary(lmer(logrt ~ valenceE + trial40c + (valenceE | ID) + (1 | word),  data=rndtb2)) # ME valence
selfrelplot <- ggplot(data=rndtb2, aes(x=valence, y=logrt)) +
geom_jitter(aes(color=as.factor(valence)), position = position_jitter(width = .2), size=1.5) +
labs(title = "Log RT by Valence - Self-Relevant Traits Only", x="id", y="Log RT") +
stat_summary(aes(group=valence), fun.y = mean, geom="point", colour="black", size=2) +
stat_summary(fun.data=mean_cl_boot, geom='errorbar', size = .5) +
scale_color_manual(values=c("orangered3", "green4")) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position='none',
plot.title = element_text(lineheight=.8, face="bold"),
axis.title.y = element_text(face="bold", vjust=0.5),
axis.title.x = element_text(face="bold", vjust=-0.35)) +
facet_wrap(~id)
ggsave(selfrelplot, file = "selfrelplot_N62.pdf", height = 40/2.54, width = 64/2.54)
# trimmed data: removed any < 100 ms and any greater than 2 SD above mean (1.29+.8*2=2.89)
sd(rndtb2$rt) # SD = 0.34
summary(rndtb2$rt) # M = .98
quantile(rndtb2$rt, c(.90, .95, .99))
rndtb <- subset(rndtb2, rt >= .01 & rt < 1.45) #90th percentile or below
mean(rndtb$rt)
median(rndtb$rt)
mean(rndtb$rt[rndtb$valence=="positive"])
mean(rndtb$rt[rndtb$valence=="negative"])
# standard model -- Significant main effect of valence
summary(lm(logrt~valenceE + trial40c, data = rndtb))
summary(lm(rt~valenceE + trial40c, data = rndtb))
#random intercept model
summary(lmer(logrt ~ valenceE + trial40c + (1 | id),  data=rndtb))
summary(lmer(rt ~ valenceE + trial40c + (1 | id),  data=rndtb))
#random intercept & slope of valence
summary(lmer(logrt ~ valenceE + trial40c + (1 + valenceE| id),  data=rndtb))
summary(lmer(rt ~ valenceE + trial40c + (1 + valenceE| id),  data=rndtb))
#random intercept & slope of valence plus random intercept of word
summary(lmer(logrt ~ valenceE + trial40c + (1 + valenceE| id) + (1 | word),  data=rndtb))
summary(lmer(rt ~ valenceE + trial40c + (1 + valenceE| id) + (1 | word),  data=rndtb))
#random intercept & slope of trial
noslope <- (lme(fixed=logrt ~ valenceE + trial40c,  data=rndtb, random= ~ 1 + trial40c | id))
summary(noslope)
####### Updates - Stricter Exclusion Cutoff 2 ######
rndtb2$rt.z <- scale(rndtb2$rt)
sort(rndtb2$rt.z)
rndtz <- subset(rndtb2,  rt.z < 3) #within 3 SD of the mean RT
# standard model -- Significant main effect of valence
summary(lm(logrt~valenceE + trial40c, data = rndtz))
summary(lm(rt~valenceE + trial40c, data = rndtz)) #run on raw rt
#random intercept model
summary(lmer(logrt ~ valenceE + trial40c + (1 | id),  data=rndtz))
summary(lmer(rt ~ valenceE + trial40c + (1 | id),  data=rndtz))
#random intercept & slope of valence
summary(lmer(logrt ~ valenceE + trial40c + (1 + valenceE| id),  data=rndtz))
summary(lmer(rt ~ valenceE + trial40c + (1 + valenceE| id),  data=rndtz))
#random intercept & slope of valence & random effects of time
summary(lmer(logrt ~ valenceE + trial40c + (1 + valenceE + trial40c | id) ,  data=rndtz))
summary(lmer(rt ~ valenceE + trial40c + (1 + valenceE + trial40c| id) ,  data=rndtz))
#random intercept & slope of valence & random effects of time and word
summary(lmer(logrt ~ valenceE + trial40c + (1 + valenceE + trial40c | id) + (1 | word),  data=rndtz))
summary(lmer(rt ~ valenceE + trial40c + (1 + valenceE + trial40c| id) + (1 | word),  data=rndtz))
#random intercept & slope of valence and trial
#valenceslope <- (lme(fixed=logrt ~ valenceE + trial40c,  data=rndtb, random= ~ 1 + valenceE + trial40c |id))
#summary(lme(fixed=rt ~ valence + trial40c,  data=rndtb2, random= ~ 1 + valence + trial40c | id)) #raw rt
#random intercept & slope of valence and trial: Raw RT
#valenceslope.raw <- (lme(fixed=rt ~ valenceE + trial40c,  data=rndtb, random= ~ 1 + valenceE + trial40c | id))
valenceslope.raw2 <- (lmer(rt ~ valenceE + trial40c + (1 + valenceE + trial40c| id) + (1 | word),  data=rndtz))
#summary(valenceslope.raw)
summary(valenceslope.raw2)
#vposranef.raw<- -0.1270142 + ranef(valenceslope.raw)[2]
vposranef.raw2<- -0.167972 + ranef(valenceslope.raw2)$id[2]
quantile(vposranef.raw2$valenceE, probs=c(.025, .975))
1000*quantile(vposranef.raw2$valenceE, probs=c(.025, .5, .975))
#pdf("random_wave2_dotplot.pdf", width = 16, height = 8)
stripchart(1000*vposranef.raw2, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-500, 150), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-463, -168, 127), col = c("red", "black", "red"),
lwd = 3)
#dev.off()
pdf("random_wave2_dotplot_N62_161021.pdf", width = 16, height = 8)
stripchart(1000*vposranef.raw2, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-500, 150), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-463, -168, 127), col = c("red", "black", "red"),
lwd = 3)
dev.off()
pdf("random_wave2_dotplot_N62_161021.pdf", width = 16, height = 8)
stripchart(1000*vposranef.raw2, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-500, 150), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-463, -168, 127), col = c("red", "black", "red"),
lwd = 3)
dev.off()
valenceslope.raw2 <- (lmer(rt ~ valenceE + trial40c + (1 + valenceE + trial40c| id) + (1 | word),  data=rndtz))
summary(valenceslope.raw2)
vposranef.raw2<- -0.167972 + ranef(valenceslope.raw2)$id[2]
quantile(vposranef.raw2$valenceE, probs=c(.025, .975))
1000*quantile(vposranef.raw2$valenceE, probs=c(.025, .5, .975))
pdf("random_wave2_dotplot_N62_161021.pdf", width = 16, height = 8)
stripchart(1000*vposranef.raw2, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-500, 150), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-408, -161, 32), col = c("red", "black", "red"),
lwd = 3)
dev.off()
git config --global --unset http.proxy
summary(valenceslope.raw2)
summary(valenceslope.raw2)
#vposranef.raw<- -0.1270142 + ranef(valenceslope.raw)[2]
vposranef.raw2<- -0.174426 + ranef(valenceslope.raw2)$id[2]
quantile(vposranef.raw2$valenceE, probs=c(.025, .975))
1000*quantile(vposranef.raw2$valenceE, probs=c(.025, .5, .975))
pdf("random_wave2_dotplot_N62_161021.pdf", width = 16, height = 8)
stripchart(1000*vposranef.raw2, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-500, 150), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-408, -161, 32), col = c("red", "black", "red"),
lwd = 3)
dev.off()
q()
# RANDOM PROJECT ANALYSES 161021
setwd("/Users/zeekatherine")
setwd("~/KZNB")
rnd <- read.csv("randomproject_data_aggregated_161021.csv")
library(nlme)
library(lme4)
library(ggplot2)
library(lmerTest)
theme_set(theme_bw(base_size = 14))
#For Bayesian analysis:
library(brms)
#For dotplots
library(Rcmdr)
#### RECODING TIME ####
# so that one unit (-.5, .5) = duration of study
rnd$trial40 <- (rnd$trials.thisN + 1)
rnd$trial40c <- (rnd$trial40 - 20)/40
#### TRIMMING & TRANSFORMING RT ####
# rt density plot
ggplot(rnd, aes(x=response.rt)) +
geom_density()
hist(rnd$response.rt)
# trimmed data: removed any < 100 ms and any greater than 3 SD above mean (1.29+.8*3=3.69)
sd(rnd$response.rt, na.rm=T) # SD = 0.35
summary(rnd$response.rt, na.rm=T) # M = 1.02
#rndt <- subset(rnd, rt >= .01 & rt < 3.69)
rndt <- rnd
##log transform latency scores
rndt$rt <- rndt$response.rt
rndt$logrt <- log(rndt$response.rt)
# log rt density plot - normal !
ggplot(rndt, aes(x=logrt)) +
geom_density()
rndt$id <- rndt$ID
rndt$valenceE <-recode(rndt$valence, as.factor.result=F, '"negative" = -0.5; "positive" = 0.5')
#### ANALYSES without Self-Relevance ####
###
#random intercept & slope for trial number (centered -.5, .5)
summary(lmer(rt ~ trial40c + (trial40c | id),  data=rndt))
### VALENCE EFFECT (objective valence of words)
# simple regression: no main effect of valence on rt
summary(lm(rt ~ valence, rndt)) # significant main effect
#random intercept model - ns fixed
summary(lmer(rt ~ valence + trial40c + (1 | id),  data=rndt)) # ME of valence
#random intercept & slope  - ns fixed
summary(lmer(rt ~ valence + trial40c + (valence + trial40c | id),  data=rndt)) # ME of valence
# plotted:
ggplot(data=rndt, aes(x=valence, y=logrt)) +
geom_jitter(aes(color=as.factor(valence)), position = position_jitter(width = .2), size=1.5) +
labs(title = "Log RT by Valence", x="id", y="Log RT") +
stat_summary(aes(group=id), fun.y = mean, geom="point", colour="black", size=2) +
stat_summary(fun.data=mean_cl_boot, geom='errorbar', size = .5) +
scale_color_manual(values=c("orangered3", "green4")) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position='none',
plot.title = element_text(lineheight=.8, face="bold"),
axis.title.y = element_text(face="bold", vjust=0.5),
axis.title.x = element_text(face="bold", vjust=-0.35)) +
facet_wrap(~id)
##### Only looking at traits rated as self-descriptive ######
rndtb2 <- subset(rndt, response.keys == "up")
# standard model
summary(lm(rt~valenceE + trial40c, data = rndtb2))
#random intercept models
intmod <- (lmer(rt ~ valenceE + trial40c + (1 | ID),  data=rndtb2)) # ME valence
summary(lmer(logrt ~ valenceE + trial40c + (1 | ID),  data=rndtb2)) # ME valence
#random intercept & slope
summary(lmer(rt ~ valenceE + trial40c + (valenceE | ID),  data=rndtb2)) # ME valence
summary(lmer(logrt ~ valenceE + trial40c + (valenceE | ID),  data=rndtb2)) # ME valence
anova(intmod, slopemod)
#random intercept & slope of valence and word
summary(lmer(rt ~ valenceE + trial40c + (valenceE | ID) + (1 | word),  data=rndtb2)) # ME valence
summary(lmer(logrt ~ valenceE + trial40c + (valenceE | ID) + (1 | word),  data=rndtb2)) # ME valence
selfrelplot <- ggplot(data=rndtb2, aes(x=valence, y=logrt)) +
geom_jitter(aes(color=as.factor(valence)), position = position_jitter(width = .2), size=1.5) +
labs(title = "Log RT by Valence - Self-Relevant Traits Only", x="id", y="Log RT") +
stat_summary(aes(group=valence), fun.y = mean, geom="point", colour="black", size=2) +
stat_summary(fun.data=mean_cl_boot, geom='errorbar', size = .5) +
scale_color_manual(values=c("orangered3", "green4")) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position='none',
plot.title = element_text(lineheight=.8, face="bold"),
axis.title.y = element_text(face="bold", vjust=0.5),
axis.title.x = element_text(face="bold", vjust=-0.35)) +
facet_wrap(~id)
#ggsave(selfrelplot, file = "selfrelplot_N62.pdf", height = 40/2.54, width = 64/2.54)
####### Updates - Stricter Exclusion Cutoff ######
# trimmed data: removed any < 100 ms and any greater than 2 SD above mean (1.29+.8*2=2.89)
sd(rndtb2$rt) # SD = 0.34
summary(rndtb2$rt) # M = .98
quantile(rndtb2$rt, c(.90, .95, .99))
rndtb <- subset(rndtb2, rt >= .01 & rt < 1.45) #90th percentile or below
mean(rndtb$rt)
median(rndtb$rt)
mean(rndtb$rt[rndtb$valence=="positive"])
mean(rndtb$rt[rndtb$valence=="negative"])
# standard model -- Significant main effect of valence
summary(lm(logrt~valenceE + trial40c, data = rndtb))
summary(lm(rt~valenceE + trial40c, data = rndtb))
#random intercept model
summary(lmer(logrt ~ valenceE + trial40c + (1 | id),  data=rndtb))
summary(lmer(rt ~ valenceE + trial40c + (1 | id),  data=rndtb))
#random intercept & slope of valence
summary(lmer(logrt ~ valenceE + trial40c + (1 + valenceE| id),  data=rndtb))
summary(lmer(rt ~ valenceE + trial40c + (1 + valenceE| id),  data=rndtb))
#random intercept & slope of valence plus random intercept of word
summary(lmer(logrt ~ valenceE + trial40c + (1 + valenceE| id) + (1 | word),  data=rndtb))
summary(lmer(rt ~ valenceE + trial40c + (1 + valenceE| id) + (1 | word),  data=rndtb))
#random intercept & slope of trial
noslope <- (lme(fixed=logrt ~ valenceE + trial40c,  data=rndtb, random= ~ 1 + trial40c | id))
summary(noslope)
####### Updates - Stricter Exclusion Cutoff 2 ######
rndtb2$rt.z <- scale(rndtb2$rt)
sort(rndtb2$rt.z)
rndtz <- subset(rndtb2,  rt.z < 3) #within 3 SD of the mean RT
# standard model -- Significant main effect of valence
summary(lm(logrt~valenceE + trial40c, data = rndtz))
summary(lm(rt~valenceE + trial40c, data = rndtz)) #run on raw rt
#random intercept model
summary(lmer(logrt ~ valenceE + trial40c + (1 | id),  data=rndtz))
summary(lmer(rt ~ valenceE + trial40c + (1 | id),  data=rndtz))
#random intercept & slope of valence
summary(lmer(logrt ~ valenceE + trial40c + (1 + valenceE| id),  data=rndtz))
summary(lmer(rt ~ valenceE + trial40c + (1 + valenceE| id),  data=rndtz))
#random intercept & slope of valence & random effects of time
summary(lmer(logrt ~ valenceE + trial40c + (1 + valenceE + trial40c | id) ,  data=rndtz))
summary(lmer(rt ~ valenceE + trial40c + (1 + valenceE + trial40c| id) ,  data=rndtz))
#random intercept & slope of valence & random effects of time and word
summary(lmer(logrt ~ valenceE + trial40c + (1 + valenceE + trial40c | id) + (1 | word),  data=rndtz))
summary(lmer(rt ~ valenceE + trial40c + (1 + valenceE + trial40c| id) + (1 | word),  data=rndtz))
#random intercept & slope of valence and trial
#valenceslope <- (lme(fixed=logrt ~ valenceE + trial40c,  data=rndtb, random= ~ 1 + valenceE + trial40c |id))
#summary(lme(fixed=rt ~ valence + trial40c,  data=rndtb2, random= ~ 1 + valence + trial40c | id)) #raw rt
#random intercept & slope of valence and trial: Raw RT
#valenceslope.raw <- (lme(fixed=rt ~ valenceE + trial40c,  data=rndtb, random= ~ 1 + valenceE + trial40c | id))
valenceslope.raw2 <- (lmer(rt ~ valenceE + trial40c + (1 + valenceE + trial40c| id) + (1 | word),  data=rndtz))
#summary(valenceslope.raw)
summary(valenceslope.raw2)
#vposranef.raw<- -0.1270142 + ranef(valenceslope.raw)[2]
vposranef.raw2<- -0.174426 + ranef(valenceslope.raw2)$id[2]
quantile(vposranef.raw2$valenceE, probs=c(.025, .975))
1000*quantile(vposranef.raw2$valenceE, probs=c(.025, .5, .975))
#pdf("random_wave2_dotplot_N62_161021.pdf", width = 16, height = 8)
stripchart(1000*vposranef.raw2, pch=21, bg="skyblue", cex=3.5, lwd=2,
xlim=c(-500, 150), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-408, -161, 32), col = c("red", "black", "red"),
lwd = 3)
#dev.off()
summary(lm(rt~valenceE + trial40c, data = rndtz)) #run on raw rt
summary(lmer(rt ~ valenceE + trial40c + (1 | id),  data=rndtz))
summary(lmer(rt ~ valenceE + trial40c + (1 + valenceE| id),  data=rndtz))
summary(lmer(rt ~ valenceE + trial40c + (1 + valenceE + trial40c| id) ,  data=rndtz))
summary(lmer(rt ~ valenceE + trial40c + (1 + valenceE + trial40c| id) + (1 | word),  data=rndtz))
summary(lmer(rt ~ valenceE + trial40c + (1 | id),  data=rndtz))
