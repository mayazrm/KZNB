<<<<<<< HEAD
plot(jitter(datamerge$prom.c), jitter(datamerge$logrt), pch = c("neg" = 1, "pos" = 19)[datamerge$valenceE_fac],
frame = F, ylim=c(5.8, 7.8), col = c("neg" = "gray30", "pos" = "darkgreen")[datamerge$valenceE_fac], cex  = .5, cex.lab = 1.3, cex.axis = 1.3,
xlim=c(-2.15, 1.1), xlab="Promotion Focus (mean centered)",
ylab="Log RT")
polygon(c(prompos$prom.c,rev(prompos$prom.c)),
c(prompos$rtlo,rev(prompos$rthi)),
col=rgb(.1, 0.8, 0.1, 0.1),
border = NA)
polygon(c(promneg$prom.c,rev(promneg$prom.c)),
c(promneg$rtlo,rev(promneg$rthi)),
col=rgb(.1, 0.1, 0.1, 0.1),
border = NA)
lines(prompos$prom.c, prompos$rtpos, lty=1, lwd=4, col = "darkgreen")
lines(prompos$prom.c, prompos$rtlo, lty='solid', col = "darkgreen", lwd = .5)
lines(prompos$prom.c, prompos$rthi, lty='solid', col = "darkgreen", lwd = .5)
lines(promneg$prom.c, promneg$rtpos, lty='longdash', lwd=4, col = "gray30")
lines(promneg$prom.c, promneg$rtlo, lty='longdash', col = "gray30", lwd = .5)
lines(promneg$prom.c, promneg$rthi, lty='longdash', col = "gray30", lwd = .5)
legend(-1.4,6, c("Negatively Valenced Words", "Positively Valenced Words"),
lty=c('longdash','solid'), # gives the legend appropriate symbols (lines)
lwd=c(2,2),col=c('gray30','darkgreen'),
pch = c(1, 19), cex = .8, pt.cex = 1)
dev.off()
datamerge$valenceE_fac
promneg$rtpos
dev.off()
prompos$rtlo
plot(jitter(datamerge$prom.c), jitter(datamerge$logrt), pch = c("neg" = 1, "pos" = 19)[datamerge$valenceE_fac],
frame = F, ylim=c(5.8, 7.8), col = c("neg" = "gray30", "pos" = "darkgreen")[datamerge$valenceE_fac], cex  = .5, cex.lab = 1.3, cex.axis = 1.3,
xlim=c(-2.15, 1.1), xlab="Promotion Focus (mean centered)",
ylab="Log RT")
polygon(c(prompos$prom.c,rev(prompos$prom.c)),
c(prompos$rtlo,rev(prompos$rthi)),
col=rgb(.1, 0.8, 0.1, 0.1),
border = NA)
polygon(c(promneg$prom.c,rev(promneg$prom.c)),
c(promneg$rtlo,rev(promneg$rthi)),
col=rgb(.1, 0.1, 0.1, 0.1),
border = NA)
plot(jitter(datamerge$prom.c), jitter(datamerge$logrt), pch = c("neg" = 1, "pos" = 19)[datamerge$valenceE_fac],
frame = F, ylim=c(5.8, 7.8)
)
datamerge$prom.c
datamerge$logrt
datamerge$valenceE_fac <- as.factor(datamerge$valenceE_fac)
plot(jitter(datamerge$prom.c), jitter(datamerge$logrt)
)
plot(jitter(datamerge$prom.c), jitter(datamerge$logrt), pch = c("neg" = 1, "pos" = 19)[datamerge$valenceE_fac]
)
plot(jitter(datamerge$prom.c), jitter(datamerge$logrt), pch = c("neg" = 1, "pos" = 19)[datamerge$valenceE_fac],
frame = F, ylim=c(5.8, 7.8)
)
plot(jitter(datamerge$prom.c), jitter(datamerge$logrt), pch = c("neg" = 1, "pos" = 19)[datamerge$valenceE_fac], frame = F, ylim=c(5.8, 7.8), col = c("neg" = "gray30", "pos" = "darkgreen")[datamerge$valenceE_fac], cex  = .5, cex.lab = 1.3, cex.axis = 1.3,
xlim=c(-2.15, 1.1), xlab="Promotion Focus (mean centered)",
ylab="Log RT")
plot(jitter(datamerge$prom.c), jitter(datamerge$logrt), pch = c("neg" = 1, "pos" = 19)[datamerge$valenceE_fac], frame = F, ylim=c(5.8, 7.8), col = c("neg" = "gray30", "pos" = "darkgreen")[datamerge$valenceE_fac], cex  = .5, cex.lab = 1.3, cex.axis = 1.3,
xlim=c(-2.15, 1.1)
)
plot(jitter(datamerge$prom.c), jitter(datamerge$logrt), pch = c("neg" = 1, "pos" = 19)[datamerge$valenceE_fac], frame = F
)
summary(datamerge$logrt)
plot(jitter(datamerge$prom.c), jitter(datamerge$logrt), pch = c("neg" = 1, "pos" = 19)[datamerge$valenceE_fac], frame = F, ylim=c(-1, 1), col = c("neg" = "gray30", "pos" = "darkgreen")[datamerge$valenceE_fac], cex  = .5, cex.lab = 1.3, cex.axis = 1.3,
xlim=c(-2.15, 1.1), xlab="Promotion Focus (mean centered)",
ylab="Log RT")
polygon(c(prompos$prom.c,rev(prompos$prom.c)),
c(prompos$rtlo,rev(prompos$rthi)),
col=rgb(.1, 0.8, 0.1, 0.1),
border = NA)
polygon(c(promneg$prom.c,rev(promneg$prom.c)),
c(promneg$rtlo,rev(promneg$rthi)),
col=rgb(.1, 0.1, 0.1, 0.1),
border = NA)
lines(prompos$prom.c, prompos$rtpos, lty=1, lwd=4, col = "darkgreen")
lines(prompos$prom.c, prompos$rtlo, lty='solid', col = "darkgreen", lwd = .5)
lines(prompos$prom.c, prompos$rthi, lty='solid', col = "darkgreen", lwd = .5)
lines(promneg$prom.c, promneg$rtpos, lty='longdash', lwd=4, col = "gray30")
lines(promneg$prom.c, promneg$rtlo, lty='longdash', col = "gray30", lwd = .5)
lines(promneg$prom.c, promneg$rthi, lty='longdash', col = "gray30", lwd = .5)
legend(-2,6, c("Negatively Valenced Words", "Positively Valenced Words"),
lty=c('longdash','solid'), # gives the legend appropriate symbols (lines)
lwd=c(2,2),col=c('gray30','darkgreen'),
pch = c(1, 19), cex = .8, pt.cex = 1)
pdf("valenceXprom_figure.pdf", width = 9, height = 8)
plot(jitter(datamerge$prom.c), jitter(datamerge$logrt), pch = c("neg" = 1, "pos" = 19)[datamerge$valenceE_fac], frame = F, ylim=c(-1, 1), col = c("neg" = "gray30", "pos" = "darkgreen")[datamerge$valenceE_fac], cex  = .5, cex.lab = 1.3, cex.axis = 1.3,
xlim=c(-2.15, 1.1), xlab="Promotion Focus (mean centered)",
ylab="Log RT")
polygon(c(prompos$prom.c,rev(prompos$prom.c)),
c(prompos$rtlo,rev(prompos$rthi)),
col=rgb(.1, 0.8, 0.1, 0.1),
border = NA)
polygon(c(promneg$prom.c,rev(promneg$prom.c)),
c(promneg$rtlo,rev(promneg$rthi)),
col=rgb(.1, 0.1, 0.1, 0.1),
border = NA)
lines(prompos$prom.c, prompos$rtpos, lty=1, lwd=4, col = "darkgreen")
lines(prompos$prom.c, prompos$rtlo, lty='solid', col = "darkgreen", lwd = .5)
lines(prompos$prom.c, prompos$rthi, lty='solid', col = "darkgreen", lwd = .5)
lines(promneg$prom.c, promneg$rtpos, lty='longdash', lwd=4, col = "gray30")
lines(promneg$prom.c, promneg$rtlo, lty='longdash', col = "gray30", lwd = .5)
lines(promneg$prom.c, promneg$rthi, lty='longdash', col = "gray30", lwd = .5)
legend(-2,6, c("Negatively Valenced Words", "Positively Valenced Words"),
lty=c('longdash','solid'), # gives the legend appropriate symbols (lines)
lwd=c(2,2),col=c('gray30','darkgreen'),
pch = c(1, 19), cex = .8, pt.cex = 1)
dev.off()
rndt$logrt
summary(datamerge$logrt)
summary(rndt$logrt)
rndtzz<-rndtz[!(rndtz$id %in% c(250, 257, 272)), ]
nrow(rndtzz)
nrow(rndtz)
rndtzz<-rndtz[!(rndtz$id %in% c(250, 257, 272)), ]
summary(rndtzz$logrt)
rndt$valenceE <-recode(rndt$valence, as.factor.result=F, "negative" = -0.5; "positive" = 0.5')
rndt$valenceE <-recode(rndt$valence, as.factor.result=F, '"negative" = -0.5; "positive" = 0.5')
rndt$rtms <- rndt$rt*1000
rndt$logrt <- log(rndt$rtms)
rndtb2 <- subset(rndt, response.keys == "up")
rndtb <- subset(rndtb2, rt >= .01 & rt < 1.45) #90th percentile or below
rndtb2$rt.z <- scale(rndtb2$rt)
sort(rndtb2$rt.z)
rndtz <- subset(rndtb2,  rt.z < 3)
summary(rndtz$logrt)
mle3aaa_orig <- (lmer(logrt ~ valenceE + (1 + valenceE| id),  data=rndtz))
summary(mle3aaa_orig)
rndtzz<-rndtz[!(rndtz$id %in% c(250, 257, 272)), ]
#Now rerun the analysis on those subejcts
mle3aaa <- (lmer(logrt ~ valenceE + (1 + valenceE| id),  data=rndtzz))
summary(mle3aaa)
mle3aaa <- (lmer(logrt ~ valenceE + (1 + valenceE| id),  data=rndtzz))
summary(mle3aaa)
setwd("~/KZNB")
rndid <- read.csv("Heterogeneity_Project_Questionnaires.csv")
rndid$ID <- rndid$subject
# Mean centering function
center <- function(x) {
scale(x, center=T, scale=F)
}
# Regulatory Mode:
rndid$rmq2r <- 7-rndid$rmq2
rndid$rmq10r <- 7-rndid$rmq10
rndid$rmq27r <- 7-rndid$rmq27
rndid$rmq13r <- 7-rndid$rmq13
rndid$rmq24r <- 7-rndid$rmq24
rndid$loc.matrix <- cbind(rndid$rmq1,rndid$rmq3, rndid$rmq4, rndid$rmq5, rndid$rmq8, rndid$rmq13r, rndid$rmq16, rndid$rmq21, rndid$rmq24r, rndid$rmq25, rndid$rmq28, rndid$rmq29)
rndid$loc.v <- as.vector(rowMeans(rndid$loc.matrix, na.rm=T))
rndid$loc.c <- scale (rndid$loc.v, center=T, scale=F)
rndid$ass.matrix <- cbind(rndid$rmq2r, rndid$rmq6, rndid$rmq7, rndid$rmq9, rndid$rmq10r, rndid$rmq11, rndid$rmq15, rndid$rmq19, rndid$rmq20, rndid$rmq22, rndid$rmq27r, rndid$rmq30)
rndid$ass.v <- as.vector(rowMeans(rndid$ass.matrix, na.rm =T))
rndid$ass.c <- scale (rndid$ass.v, center=T, scale=F)
rndid$rmpredom <- rndid$loc.v-rndid$ass.v
rndid$rmpredomave <- (rndid$loc.v+rndid$ass.v)/2
rndid$rmpredom.c <- center(rndid$rmpredom)
rndid$rmpredomave.c <- center(rndid$rmpredomave )
# Regulatory Focus
rndid$rfq1r <- 6-rndid$rfq1
rndid$rfq9r <- 6-rndid$rfq9
rndid$rfq11r <- 6-rndid$rfq11
rndid$rfq2r <- 6-rndid$rfq2
rndid$rfq4r <- 6-rndid$rfq4
rndid$rfq6r <- 6-rndid$rfq6
rndid$rfq8r <- 6-rndid$rfq8
rndid$prom.matrix <- cbind(rndid$rfq1r, rndid$rfq3, rndid$rndid$rfq7, rndid$rfq9r, rndid$rfq10, rndid$rfq11r)
rndid$prom.v <- as.vector(rowMeans(rndid$prom.matrix, na.rm=T))
rndid$prom.c <- scale(rndid$prom.v, center=T, scale=F)
rndid$prev.matrix <- cbind(rndid$rfq2r, rndid$rfq4r, rndid$rfq5, rndid$rfq6r, rndid$rfq8r)
rndid$prev.v <- as.vector(rowMeans(rndid$prev.matrix, na.rm=T))
rndid$prev.c <- scale(rndid$prev.v, center=T, scale=F)
rndid$rfpredom <- rndid$prom.v-rndid$prev.v
rndid$rfpredomave <- (rndid$prom.v+rndid$prev.v)/2
rndid$rfpredom.c <- center(rndid$rfpredom )
rndid$rfpredomave.c <- center(rndid$rfpredomave)
# Self-Esteem
rndid$se2r <- 8-rndid$se2
rndid$se5r <- 8-rndid$se5
rndid$se6r <- 8-rndid$se6
rndid$se8r <- 8-rndid$se8
rndid$se9r <- 8-rndid$se9
rndid$se.all <- cbind(rndid$se1, rndid$se2r, rndid$se3, rndid$se4, rndid$se5r, rndid$se6r, rndid$se7, rndid$se8r, rndid$se9r, rndid$se10)
rndid$se.v <- as.vector(rowMeans(rndid$se.all, na.rm=T))
rndid$se.c <- scale(rndid$se.v, center=T, scale=F)
summary(rndtzz$logrt)
datamerge <- merge(rndid, rndtzz, by = "ID")
summary(datamerge$logrt)
modindiv1 <- lmer(logrt ~ valenceE*prom.c*prev.c + trial40c  + (1 + valenceE| id),  data=datamerge)
summary(modindiv1)
# significant interaction of valence and promotion
# marginally significant interaction of valence and prevention
# SD of valence effects = .13
library(effects)
plot(effect(term="prom.c:valenceE",mod=modindiv1,default.levels=2),multiline=TRUE)
prompos <- data.frame(prom.c = seq(min(datamerge$prom.c, na.rm=T), max(datamerge$prom.c, na.rm=T), .05),
prev.c = 0, trial40c = 0, valenceE = .5)
mmprompos<-model.matrix(~valenceE*prom.c*prev.c + trial40c, prompos)
prompos$rtpos <- predict(modindiv1, prompos, re.form=NA)
#predict(m,newdat,re.form=NA) would give the same results
pvarprompos<- diag(mmprompos %*% tcrossprod(vcov(modindiv1),mmprompos))
prompos$rtlo <- prompos$rtpos-1.96*sqrt(pvarprompos)
prompos$rthi <- prompos$rtpos+1.96*sqrt(pvarprompos)
promneg <- data.frame(prom.c = seq(min(datamerge$prom.c, na.rm=T), max(datamerge$prom.c, na.rm=T), .05),
prev.c = 0, trial40c = 0, valenceE = -.5)
mmpromneg<-model.matrix(~valenceE*prom.c*prev.c + trial40c, promneg)
promneg$rtpos <- predict(modindiv1, promneg, re.form=NA)
#predict(m,newdat,re.form=NA) would give the same results
pvarpromneg<- diag(mmpromneg %*% tcrossprod(vcov(modindiv1),mmpromneg))
promneg$rtlo <- promneg$rtpos-1.96*sqrt(pvarpromneg)
promneg$rthi <- promneg$rtpos+1.96*sqrt(pvarpromneg)
datamerge$valenceE_fac <- ifelse(datamerge$valenceE==.5, "pos", "neg")
datamerge$valenceE_fac <- as.factor(datamerge$valenceE_fac)
pdf("valenceXprom_figure.pdf", width = 9, height = 8)
plot(jitter(datamerge$prom.c), jitter(datamerge$logrt), pch = c("neg" = 1, "pos" = 19)[datamerge$valenceE_fac], frame = F, ylim=c(5.9, 7.7), col = c("neg" = "gray30", "pos" = "darkgreen")[datamerge$valenceE_fac], cex  = .5, cex.lab = 1.3, cex.axis = 1.3,
xlim=c(-2.15, 1.1), xlab="Promotion Focus (mean centered)",
ylab="Log RT")
polygon(c(prompos$prom.c,rev(prompos$prom.c)),
c(prompos$rtlo,rev(prompos$rthi)),
col=rgb(.1, 0.8, 0.1, 0.1),
border = NA)
polygon(c(promneg$prom.c,rev(promneg$prom.c)),
c(promneg$rtlo,rev(promneg$rthi)),
col=rgb(.1, 0.1, 0.1, 0.1),
border = NA)
lines(prompos$prom.c, prompos$rtpos, lty=1, lwd=4, col = "darkgreen")
lines(prompos$prom.c, prompos$rtlo, lty='solid', col = "darkgreen", lwd = .5)
lines(prompos$prom.c, prompos$rthi, lty='solid', col = "darkgreen", lwd = .5)
lines(promneg$prom.c, promneg$rtpos, lty='longdash', lwd=4, col = "gray30")
lines(promneg$prom.c, promneg$rtlo, lty='longdash', col = "gray30", lwd = .5)
lines(promneg$prom.c, promneg$rthi, lty='longdash', col = "gray30", lwd = .5)
legend(-2,6, c("Negatively Valenced Words", "Positively Valenced Words"),
lty=c('longdash','solid'), # gives the legend appropriate symbols (lines)
lwd=c(2,2),col=c('gray30','darkgreen'),
pch = c(1, 19), cex = .8, pt.cex = 1)
dev.off()
prevpos <- data.frame(prev.c = seq(min(datamerge$prev.c, na.rm=T), max(datamerge$prev.c, na.rm=T), .05),
prom.c = 0, trial40c = 0, valenceE = .5)
mmprevpos<-model.matrix(~valenceE*prom.c*prev.c + trial40c, prevpos)
prevpos$rtpos <- predict(modindiv1, prevpos, re.form=NA)
#predict(m,newdat,re.form=NA) would give the same results
pvarprevpos<- diag(mmprevpos %*% tcrossprod(vcov(modindiv1),mmprevpos))
prevpos$rtlo <- prevpos$rtpos-1.96*sqrt(pvarprevpos)
prevpos$rthi <- prevpos$rtpos+1.96*sqrt(pvarprevpos)
prevneg <- data.frame(prev.c = seq(min(datamerge$prev.c, na.rm=T), max(datamerge$prev.c, na.rm=T), .05),
prom.c = 0, trial40c = 0, valenceE = -.5)
mmprevneg<-model.matrix(~valenceE*prom.c*prev.c + trial40c, prevneg)
prevneg$rtpos <- predict(modindiv1, prevneg, re.form=NA)
#predict(m,newdat,re.form=NA) would give the same results
pvarprevneg<- diag(mmprevneg %*% tcrossprod(vcov(modindiv1),mmprevneg))
prevneg$rtlo <- prevneg$rtpos-1.96*sqrt(pvarprevneg)
prevneg$rthi <- prevneg$rtpos+1.96*sqrt(pvarprevneg)
pdf("valenceXprev_figure.pdf", width = 9, height = 8)
plot(jitter(datamerge$prev.c), jitter(datamerge$logrt), pch = c("neg" = 1, "pos" = 19)[datamerge$valenceE_fac],
frame = F, ylim=c(5.9, 7.7), col = c("neg" = "gray30", "pos" = "darkred")[datamerge$valenceE_fac], cex  = .5, cex.lab = 1.3, cex.axis = 1.3,
xlim=c(-2.15, 1.1), xlab="Prevention Focus (mean centered)",
ylab="Log RT")
polygon(c(prevpos$prom.c,rev(prevpos$prom.c)),
c(prevpos$rtlo,rev(prevpos$rthi)),
col=rgb(.8, 0.1, 0.1, 0.1),
border = NA)
polygon(c(prevneg$prom.c,rev(prevneg$prom.c)),
c(prevneg$rtlo,rev(prevneg$rthi)),
col=rgb(.1, 0.1, 0.1, 0.1),
border = NA)
lines(prevpos$prev.c, prevpos$rtpos, lty=1, lwd=4, col = "darkred")
lines(prevpos$prev.c, prevpos$rtlo, lty='solid', col = "darkred", lwd = .5)
lines(prevpos$prev.c, prevpos$rthi, lty='solid', col = "darkred", lwd = .5)
lines(prevneg$prev.c, prevneg$rtpos, lty='longdash', lwd=4, col = "gray30")
lines(prevneg$prev.c, prevneg$rtlo, lty='longdash', col = "gray30", lwd = .5)
lines(prevneg$prev.c, prevneg$rthi, lty='longdash', col = "gray30", lwd = .5)
legend(-2,6, c("Negatively Valenced Words", "Positively Valenced Words"),
lty=c('longdash','solid'), # gives the legend appropriate symbols (lines)
lwd=c(2,2),col=c('gray30','darkred'),
pch = c(1, 19), cex = .8, pt.cex = 1)
dev.off()
pdf("valenceXprev_figure.pdf", width = 9, height = 8)
plot(jitter(datamerge$prev.c), jitter(datamerge$logrt), pch = c("neg" = 1, "pos" = 19)[datamerge$valenceE_fac],
frame = F, ylim=c(5.9, 7.7), col = c("neg" = "gray30", "pos" = "darkred")[datamerge$valenceE_fac], cex  = .5, cex.lab = 1.3, cex.axis = 1.3,
xlim=c(-2.15, 1.1), xlab="Prevention Focus (mean centered)",
ylab="Log RT")
polygon(c(prevpos$prom.c,rev(prevpos$prev.c)),
c(prevpos$rtlo,rev(prevpos$rthi)),
col=rgb(.8, 0.1, 0.1, 0.1),
border = NA)
polygon(c(prevneg$prom.c,rev(prevneg$prev.c)),
c(prevneg$rtlo,rev(prevneg$rthi)),
col=rgb(.1, 0.1, 0.1, 0.1),
border = NA)
lines(prevpos$prev.c, prevpos$rtpos, lty=1, lwd=4, col = "darkred")
lines(prevpos$prev.c, prevpos$rtlo, lty='solid', col = "darkred", lwd = .5)
lines(prevpos$prev.c, prevpos$rthi, lty='solid', col = "darkred", lwd = .5)
lines(prevneg$prev.c, prevneg$rtpos, lty='longdash', lwd=4, col = "gray30")
lines(prevneg$prev.c, prevneg$rtlo, lty='longdash', col = "gray30", lwd = .5)
lines(prevneg$prev.c, prevneg$rthi, lty='longdash', col = "gray30", lwd = .5)
legend(-2,6, c("Negatively Valenced Words", "Positively Valenced Words"),
lty=c('longdash','solid'), # gives the legend appropriate symbols (lines)
lwd=c(2,2),col=c('gray30','darkred'),
pch = c(1, 19), cex = .8, pt.cex = 1)
dev.off()
pdf("valenceXprev_figure.pdf", width = 9, height = 8)
plot(jitter(datamerge$prev.c), jitter(datamerge$logrt), pch = c("neg" = 1, "pos" = 19)[datamerge$valenceE_fac],
frame = F, ylim=c(5.9, 7.7), col = c("neg" = "gray30", "pos" = "darkred")[datamerge$valenceE_fac], cex  = .5, cex.lab = 1.3, cex.axis = 1.3,
xlim=c(-2.15, 1.1), xlab="Prevention Focus (mean centered)",
ylab="Log RT")
polygon(c(prevpos$prev.c,rev(prevpos$prev.c)),
c(prevpos$rtlo,rev(prevpos$rthi)),
col=rgb(.8, 0.1, 0.1, 0.1),
border = NA)
polygon(c(prevneg$prev.c,rev(prevneg$prev.c)),
c(prevneg$rtlo,rev(prevneg$rthi)),
col=rgb(.1, 0.1, 0.1, 0.1),
border = NA)
lines(prevpos$prev.c, prevpos$rtpos, lty=1, lwd=4, col = "darkred")
lines(prevpos$prev.c, prevpos$rtlo, lty='solid', col = "darkred", lwd = .5)
lines(prevpos$prev.c, prevpos$rthi, lty='solid', col = "darkred", lwd = .5)
lines(prevneg$prev.c, prevneg$rtpos, lty='longdash', lwd=4, col = "gray30")
lines(prevneg$prev.c, prevneg$rtlo, lty='longdash', col = "gray30", lwd = .5)
lines(prevneg$prev.c, prevneg$rthi, lty='longdash', col = "gray30", lwd = .5)
legend(-2,6, c("Negatively Valenced Words", "Positively Valenced Words"),
lty=c('longdash','solid'), # gives the legend appropriate symbols (lines)
lwd=c(2,2),col=c('gray30','darkred'),
pch = c(1, 19), cex = .8, pt.cex = 1)
dev.off()
summary(modindiv1)
pdf("valenceXprom_figure.pdf", width = 9, height = 8)
plot(jitter(datamerge$prom.c), jitter(datamerge$logrt), pch = c("neg" = 1, "pos" = 19)[datamerge$valenceE_fac], frame = F, ylim=c(5.9, 7.7), col = c("neg" = "gray30", "pos" = "darkgreen")[datamerge$valenceE_fac], cex  = .5, cex.lab = 1.6, cex.axis = 1.3,
xlim=c(-2.15, 1.1), xlab="Promotion Focus (mean centered)",
ylab="Log RT")
polygon(c(prompos$prom.c,rev(prompos$prom.c)),
c(prompos$rtlo,rev(prompos$rthi)),
col=rgb(.1, 0.8, 0.1, 0.1),
border = NA)
polygon(c(promneg$prom.c,rev(promneg$prom.c)),
c(promneg$rtlo,rev(promneg$rthi)),
col=rgb(.1, 0.1, 0.1, 0.1),
border = NA)
lines(prompos$prom.c, prompos$rtpos, lty=1, lwd=4, col = "darkgreen")
lines(prompos$prom.c, prompos$rtlo, lty='solid', col = "darkgreen", lwd = .5)
lines(prompos$prom.c, prompos$rthi, lty='solid', col = "darkgreen", lwd = .5)
lines(promneg$prom.c, promneg$rtpos, lty='longdash', lwd=4, col = "gray30")
lines(promneg$prom.c, promneg$rtlo, lty='longdash', col = "gray30", lwd = .5)
lines(promneg$prom.c, promneg$rthi, lty='longdash', col = "gray30", lwd = .5)
legend(-2,6, c("Negatively Valenced Words", "Positively Valenced Words"),
lty=c('longdash','solid'), # gives the legend appropriate symbols (lines)
lwd=c(2,2),col=c('gray30','darkgreen'),
pch = c(1, 19), cex = .8, pt.cex = 1)
dev.off()
pdf("valenceXprev_figure.pdf", width = 9, height = 8)
plot(jitter(datamerge$prev.c), jitter(datamerge$logrt), pch = c("neg" = 1, "pos" = 19)[datamerge$valenceE_fac],
frame = F, ylim=c(5.9, 7.7), col = c("neg" = "gray30", "pos" = "darkred")[datamerge$valenceE_fac], cex  = .5, cex.lab = 1.6, cex.axis = 1.3,
xlim=c(-2.15, 1.1), xlab="Prevention Focus (mean centered)",
ylab="Log RT")
polygon(c(prevpos$prev.c,rev(prevpos$prev.c)),
c(prevpos$rtlo,rev(prevpos$rthi)),
col=rgb(.8, 0.1, 0.1, 0.1),
border = NA)
polygon(c(prevneg$prev.c,rev(prevneg$prev.c)),
c(prevneg$rtlo,rev(prevneg$rthi)),
col=rgb(.1, 0.1, 0.1, 0.1),
border = NA)
lines(prevpos$prev.c, prevpos$rtpos, lty=1, lwd=4, col = "darkred")
lines(prevpos$prev.c, prevpos$rtlo, lty='solid', col = "darkred", lwd = .5)
lines(prevpos$prev.c, prevpos$rthi, lty='solid', col = "darkred", lwd = .5)
lines(prevneg$prev.c, prevneg$rtpos, lty='longdash', lwd=4, col = "gray30")
lines(prevneg$prev.c, prevneg$rtlo, lty='longdash', col = "gray30", lwd = .5)
lines(prevneg$prev.c, prevneg$rthi, lty='longdash', col = "gray30", lwd = .5)
legend(-2,6, c("Negatively Valenced Words", "Positively Valenced Words"),
lty=c('longdash','solid'), # gives the legend appropriate symbols (lines)
lwd=c(2,2),col=c('gray30','darkred'),
pch = c(1, 19), cex = .8, pt.cex = 1)
dev.off()
pdf("valenceXprev_figure.pdf", width = 9, height = 8)
plot(jitter(datamerge$prev.c), jitter(datamerge$logrt), pch = c("neg" = 1, "pos" = 19)[datamerge$valenceE_fac],
frame = F, ylim=c(5.9, 7.7), col = c("neg" = "gray30", "pos" = "darkred")[datamerge$valenceE_fac], cex  = .5, cex.lab = 1.8, cex.axis = 1.3,
xlim=c(-2.15, 1.1), xlab="Prevention Focus (mean centered)",
ylab="Log RT")
polygon(c(prevpos$prev.c,rev(prevpos$prev.c)),
c(prevpos$rtlo,rev(prevpos$rthi)),
col=rgb(.8, 0.1, 0.1, 0.1),
border = NA)
polygon(c(prevneg$prev.c,rev(prevneg$prev.c)),
c(prevneg$rtlo,rev(prevneg$rthi)),
col=rgb(.1, 0.1, 0.1, 0.1),
border = NA)
lines(prevpos$prev.c, prevpos$rtpos, lty=1, lwd=4, col = "darkred")
lines(prevpos$prev.c, prevpos$rtlo, lty='solid', col = "darkred", lwd = .5)
lines(prevpos$prev.c, prevpos$rthi, lty='solid', col = "darkred", lwd = .5)
lines(prevneg$prev.c, prevneg$rtpos, lty='longdash', lwd=4, col = "gray30")
lines(prevneg$prev.c, prevneg$rtlo, lty='longdash', col = "gray30", lwd = .5)
lines(prevneg$prev.c, prevneg$rthi, lty='longdash', col = "gray30", lwd = .5)
legend(-2,6, c("Negatively Valenced Words", "Positively Valenced Words"),
lty=c('longdash','solid'), # gives the legend appropriate symbols (lines)
lwd=c(2,2),col=c('gray30','darkred'),
pch = c(1, 19), cex = 1.5, pt.cex = 1.5)
=======
View(ran7m)
ran7m$math_anxiety.c <- scale(ran7m$math_anxiety, center=T, scale=F)
ran7m$math_self_rating.c <- scale(ran7m$math_self_rating, center=T, scale=F)
ran7mod2math <- lmer(rt ~ congr*ptimer + congr*math_anxiety.c + (1 + congr | subject), data = ran7m)
summary(ran7mod2math)
ran7mod2math2 <- lmer(rt ~ congr*ptimer + congr*math_self_rating.c + (1 + congr | subject), data = ran7m)
summary(ran7mod2math2)
ran7mod2math <- lmer(rt ~ congr*ptimer + congr*math_anxiety.c + (1 | subject), data = ran7m)
summary(ran7mod2math)
ran7mod2math <- lmer(rt ~ congr*ptimer + congr*math_anxiety.c + (1 + congr | subject), data = ran7m)
summary(ran7mod2math)
View(randata)
summary(randata$val)
summary(modelslope)
modelslopeb1 <- brm(RT ~ val + (val | SubjectNumber) + (1 | item), data = randata, chains = 3, cores = 4)
summary(modelslopeb)
summary(modelslopeb1)
confint(modelslope, oldNames=FALSE)
WAIC(modelintb, modelslopeb)
summary(modelintb)
WAIC(modelintb)
WAIC(modelintb, modelslopeb)
hist(post.modelslopeb$sd_SubjectNumber__val, breaks=50)
post.modelslopeb<-posterior_samples(modelslopeb)
hist(post.modelslopeb$sd_SubjectNumber__val, breaks=50)
View(post.modelslopeb)
View(post.modelslopeb)
hist(as.numeric(post.modelslopeb$sd_SubjectNumber__val), breaks=50)
median(post.modelslopeb$sd_SubjectNumber__val)
View(randata)
modelslopeb <- brm(RT ~ val + (val | SubjectNumber), data = randata, chains = 3, cores = 4)
summary(modelslopeb)
WAIC(modelintb, modelslopeb)
post.modelslopeb<-posterior_samples(modelslopeb)
hist(post.modelslopeb$sd_SubjectNumber_val)
hist(post.modelslopeb$sd_SubjectNumber_val, breaks=50)
hist(post.modelslopeb$sd_SubjectNumber_val, breaks=10)
hist(post.modelslopeb$sd_SubjectNumber_val)
hist(post.modelslopeb$sd_SubjectNumber_val, breaks=50)
median(post.modelslopeb$sd_SubjectNumber_val)
save.image("~/KZNB/RanData_Heterogeneity_170315.RData")
anova(modelint, modelslope)
AIC(modelint, modelslope)
anova(modelint, modelslope)
AIC(modelintb, modelslopeb)
modelint <- lmer(RT ~ val + (1 | SubjectNumber), data = randata)
summary(modelint)
summary(modelslope)
modelslope <- lmer(RT ~ val + (val | SubjectNumber), data = randata)
summary(modelslope)
summary(modelintb)
summary(modelslopeb)
anova(modelint, modelslope)
summary(modelslopeb)
AIC(modelintb, modelslopeb)
AIC(modelintb)
WAIC(modelintb, modelslopeb)
WAIC(modelintb, modelslopeb1)
bm.modelsloperanef <- 0.07 + ranef(modelslopeb)$SubjectNumber[,2]
quantile(bm.modelsloperanef, probs=c(.025, .5, .975))
quantile(modelsloperanef$val, probs=c(.025, .5, .975))
bm.modelsloperanef <- 0.07 + ranef(modelslopeb)$SubjectNumber[,2]
x <- list("MLE"=modelsloperanef, "Bayes"=bm.modelsloperanef)
stripchart(x,
main="Multiple stripchart for comparision \n Gray = Mean and SDs, Colored Lines = Quantiles",
xlab="Random Effects of Valence on RT",
ylab="Method",
col=c("red","blue"),
pch=16,
cex = 2,
cex.axis = 1.5,
cex.lab = 1.5,
xlim=c(-.10, .30)
)
View(randata)
cor(randata$ItemNumber, randata$item)
View(ran6)
summary(modelslope <- lmer(RT ~ val + (1 | SubjectNumber) + (val -1 | SubjectNumber), data = randata))
summary(modelint)
summary(modelslope)
modelslope <- lmer(RT ~ val + (val | SubjectNumber), data = randata)
summary(modelslope)
summary(modelint)
anova(modelint, modelslope)
library(foreign)
write.foreign(randata, "C:/Users/Niall/Documents/KZNB/randata.txt", "C:/Users/Niall/Documents/KZNB/randata.sas",   package="SAS")
selfrelplot <- ggplot(data=randata, aes(x=val, y=RT)) +
geom_jitter(aes(color=as.factor(val)), position = position_jitter(width = .2), size=1.5) +
labs(title = "RT by Valence -- Hassin Data", x="id", y="RT") +
stat_summary(aes(group=val), fun.y = mean, geom="point", colour="black", size=2) +
stat_summary(fun.data=mean_cl_boot, geom='errorbar', size = .5) +
scale_color_manual(values=c("orangered3", "green4")) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position='none',
plot.title = element_text(lineheight=.8, face="bold"),
axis.title.y = element_text(face="bold", vjust=0.5),
axis.title.x = element_text(face="bold", vjust=-0.35)) +
facet_wrap(~SubjectNumber)
selfrelplot
#ggsave(selfrelplot, file = "selfrelplot_N62_170218.pdf", height = 40/2.54, width = 64/2.54)
ggsave(selfrelplot, file = "selfrelplot_hassin_data.pdf", height = 40/2.54, width = 64/2.54)
modelslope <- lmer(log(RT) ~ val + (val | SubjectNumber), data = randata)
summary(modelslope)
stripchart(ran6mod2ranef, pch=21, bg="skyblue", cex=2, lwd=2,
xlim=c(-20, -9), xlab="Difference in Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-18.6, -15.14, -12.21), col = c("red", "black", "red"),
lwd = 3)
stripchart(x,
main="Multiple stripchart for comparision \n Gray = Mean and SDs, Colored Lines = Quantiles",
xlab="Random Effects of Valence on RT",
ylab="Method",
col=c("red","blue"),
pch=16,
cex = 2,
cex.axis = 1.5,
cex.lab = 1.5,
xlim=c(-.10, .30)
)
abline(v=c(-.02, .05, .26), col = c("darkred", "darkred", "darkred"),
lty = c("dashed", "solid", "dashed"), lwd = 4)
abline(v=c(.0006, .054, .23), col = c("darkblue", "darkblue", "darkblue"),
lty = c("dashed", "solid", "dashed"), lwd = 4)
abline(v=c(-.09, .074, .24), col = c("darkgray", "darkgray", "darkgray"),
lty = c("dashed", "solid", "dashed"), lwd = 4)
plot(modelslopeb, pars = NA, parameters = NA, combo = c("dens",
"trace"), N = 5, exact_match = FALSE, theme = NULL, plot = TRUE,
ask = F, newpage = TRUE, device = NULL)
plot(post.modelslopeb$sd_SubjectNumber_Intercept, post.modelslopeb$sd_SubjectNumber_val)
hist(post.modelslopeb$cor_SubjectNumber_Intercept_val)
hist(post.modelslopeb$cor_SubjectNumber_Intercept_val, breaks = 50)
hist(post.modelslopeb$cor_SubjectNumber_Intercept_val, breaks = 50, xlim=c(.2,1.2))
hist(post.modelslopeb$cor_SubjectNumber_Intercept_val, breaks = 70, xlim=c(.2,1))
hist(post.modelslopeb$cor_SubjectNumber_Intercept_val, breaks = 80, xlim=c(.2,1))
hist(post.modelslopeb$cor_SubjectNumber_Intercept_val, breaks = 100, xlim=c(.2,1))
median(post.modelslopeb$cor_SubjectNumber_Intcept_val)
median(post.modelslopeb$cor_SubjectNumber_Intcept_val)
median(post.modelslopeb$sd_SubjectNumber_val)
median(post.modelslopeb$cor_SubjectNumber_Intercept_val)
hist(post.modelslopeb$sd_SubjectNumber_val, breaks=50)
pdf("random_ran6_valence_histo.pdf", width = 12, height = 9)
hist(post.ran6mod2b$sd_subject_congr, breaks = 50, main = paste("Posterior Distribution of Congruence Random Effect SD"), xlab="Congruence Random Effect SD in Milliseconds", xlim = c(0, 30))
median(post.ran6mod2b$sd_subject_congr)
>>>>>>> ea534aee4636fc0fd5ff46d73e6cbceb6ba6b5ac
dev.off()
pdf("valenceXprev_figure.pdf", width = 10, height = 10)
plot(jitter(datamerge$prev.c), jitter(datamerge$logrt), pch = c("neg" = 1, "pos" = 19)[datamerge$valenceE_fac],
frame = F, ylim=c(5.9, 7.7), col = c("neg" = "gray30", "pos" = "darkred")[datamerge$valenceE_fac], cex  = .5, cex.lab = 1.8, cex.axis = 1.3,
xlim=c(-2.15, 1.1), xlab="Prevention Focus (mean centered)",
ylab="Log RT")
polygon(c(prevpos$prev.c,rev(prevpos$prev.c)),
c(prevpos$rtlo,rev(prevpos$rthi)),
col=rgb(.8, 0.1, 0.1, 0.1),
border = NA)
polygon(c(prevneg$prev.c,rev(prevneg$prev.c)),
c(prevneg$rtlo,rev(prevneg$rthi)),
col=rgb(.1, 0.1, 0.1, 0.1),
border = NA)
lines(prevpos$prev.c, prevpos$rtpos, lty=1, lwd=4, col = "darkred")
lines(prevpos$prev.c, prevpos$rtlo, lty='solid', col = "darkred", lwd = .5)
lines(prevpos$prev.c, prevpos$rthi, lty='solid', col = "darkred", lwd = .5)
lines(prevneg$prev.c, prevneg$rtpos, lty='longdash', lwd=4, col = "gray30")
lines(prevneg$prev.c, prevneg$rtlo, lty='longdash', col = "gray30", lwd = .5)
lines(prevneg$prev.c, prevneg$rthi, lty='longdash', col = "gray30", lwd = .5)
legend(-2,6.5, c("Negatively Valenced Words", "Positively Valenced Words"),
lty=c('longdash','solid'), # gives the legend appropriate symbols (lines)
lwd=c(2,2),col=c('gray30','darkred'),
pch = c(1, 19), cex = 1.5, pt.cex = 1.5)
dev.off()
pdf("valenceXprev_figure.pdf", width = 10, height = 10)
plot(jitter(datamerge$prev.c), jitter(datamerge$logrt), pch = c("neg" = 1, "pos" = 19)[datamerge$valenceE_fac],
frame = F, ylim=c(5.9, 7.7), col = c("neg" = "gray30", "pos" = "darkred")[datamerge$valenceE_fac], cex  = .5, cex.lab = 1.8, cex.axis = 1.3,
xlim=c(-2.15, 1.1), xlab="Prevention Focus (mean centered)",
ylab="Log RT")
polygon(c(prevpos$prev.c,rev(prevpos$prev.c)),
c(prevpos$rtlo,rev(prevpos$rthi)),
col=rgb(.8, 0.1, 0.1, 0.1),
border = NA)
polygon(c(prevneg$prev.c,rev(prevneg$prev.c)),
c(prevneg$rtlo,rev(prevneg$rthi)),
col=rgb(.1, 0.1, 0.1, 0.1),
border = NA)
lines(prevpos$prev.c, prevpos$rtpos, lty=1, lwd=4, col = "darkred")
lines(prevpos$prev.c, prevpos$rtlo, lty='solid', col = "darkred", lwd = .5)
lines(prevpos$prev.c, prevpos$rthi, lty='solid', col = "darkred", lwd = .5)
lines(prevneg$prev.c, prevneg$rtpos, lty='longdash', lwd=4, col = "gray30")
lines(prevneg$prev.c, prevneg$rtlo, lty='longdash', col = "gray30", lwd = .5)
lines(prevneg$prev.c, prevneg$rthi, lty='longdash', col = "gray30", lwd = .5)
legend(-2,6.25, c("Negatively Valenced Words", "Positively Valenced Words"),
lty=c('longdash','solid'), # gives the legend appropriate symbols (lines)
lwd=c(2,2),col=c('gray30','darkred'),
pch = c(1, 19), cex = 1.5, pt.cex = 1)
dev.off()
pdf("valenceXprev_figure.pdf", width = 10, height = 10)
plot(jitter(datamerge$prev.c), jitter(datamerge$logrt), pch = c("neg" = 1, "pos" = 19)[datamerge$valenceE_fac],
frame = F, ylim=c(5.9, 7.7), col = c("neg" = "gray30", "pos" = "darkred")[datamerge$valenceE_fac], cex  = .5, cex.lab = 1.5, cex.axis = 1.3,
xlim=c(-2.15, 1.1), xlab="Prevention Focus (mean centered)",
ylab="Log RT")
polygon(c(prevpos$prev.c,rev(prevpos$prev.c)),
c(prevpos$rtlo,rev(prevpos$rthi)),
col=rgb(.8, 0.1, 0.1, 0.1),
border = NA)
polygon(c(prevneg$prev.c,rev(prevneg$prev.c)),
c(prevneg$rtlo,rev(prevneg$rthi)),
col=rgb(.1, 0.1, 0.1, 0.1),
border = NA)
lines(prevpos$prev.c, prevpos$rtpos, lty=1, lwd=4, col = "darkred")
lines(prevpos$prev.c, prevpos$rtlo, lty='solid', col = "darkred", lwd = .5)
lines(prevpos$prev.c, prevpos$rthi, lty='solid', col = "darkred", lwd = .5)
lines(prevneg$prev.c, prevneg$rtpos, lty='longdash', lwd=4, col = "gray30")
lines(prevneg$prev.c, prevneg$rtlo, lty='longdash', col = "gray30", lwd = .5)
lines(prevneg$prev.c, prevneg$rthi, lty='longdash', col = "gray30", lwd = .5)
legend(-2,6.15, c("Negatively Valenced Words", "Positively Valenced Words"),
lty=c('longdash','solid'), # gives the legend appropriate symbols (lines)
lwd=c(2,2),col=c('gray30','darkred'),
pch = c(1, 19), cex = 1.5, pt.cex = 1)
dev.off()
<<<<<<< HEAD
pdf("valenceXprev_figure.pdf", width = 10, height = 10)
plot(jitter(datamerge$prev.c), jitter(datamerge$logrt), pch = c("neg" = 1, "pos" = 19)[datamerge$valenceE_fac],
frame = F, ylim=c(5.9, 7.7), col = c("neg" = "gray30", "pos" = "darkred")[datamerge$valenceE_fac], cex  = .5, cex.lab = 1.5, cex.axis = 1.3,
xlim=c(-2.15, 1.1), xlab="Prevention Focus (mean centered)",
ylab="Log RT")
polygon(c(prevpos$prev.c,rev(prevpos$prev.c)),
c(prevpos$rtlo,rev(prevpos$rthi)),
col=rgb(.8, 0.1, 0.1, 0.1),
border = NA)
polygon(c(prevneg$prev.c,rev(prevneg$prev.c)),
c(prevneg$rtlo,rev(prevneg$rthi)),
col=rgb(.1, 0.1, 0.1, 0.1),
border = NA)
lines(prevpos$prev.c, prevpos$rtpos, lty=1, lwd=4, col = "darkred")
lines(prevpos$prev.c, prevpos$rtlo, lty='solid', col = "darkred", lwd = .5)
lines(prevpos$prev.c, prevpos$rthi, lty='solid', col = "darkred", lwd = .5)
lines(prevneg$prev.c, prevneg$rtpos, lty='longdash', lwd=4, col = "gray30")
lines(prevneg$prev.c, prevneg$rtlo, lty='longdash', col = "gray30", lwd = .5)
lines(prevneg$prev.c, prevneg$rthi, lty='longdash', col = "gray30", lwd = .5)
legend(-2,6.15, c("Negatively Valenced Words", "Positively Valenced Words"),
lty=c('longdash','solid'), # gives the legend appropriate symbols (lines)
lwd=c(2,2),col=c('gray30','darkred'),
pch = c(1, 19), cex = 1.3, pt.cex = 1)
dev.off()
pdf("valenceXprom_figure.pdf", width = 10, height = 10)
plot(jitter(datamerge$prom.c), jitter(datamerge$logrt), pch = c("neg" = 1, "pos" = 19)[datamerge$valenceE_fac], frame = F, ylim=c(5.9, 7.7), col = c("neg" = "gray30", "pos" = "darkgreen")[datamerge$valenceE_fac], cex  = .5, cex.lab = 1.5, cex.axis = 1.3,
xlim=c(-2.15, 1.1), xlab="Promotion Focus (mean centered)",
ylab="Log RT")
polygon(c(prompos$prom.c,rev(prompos$prom.c)),
c(prompos$rtlo,rev(prompos$rthi)),
col=rgb(.1, 0.8, 0.1, 0.1),
border = NA)
polygon(c(promneg$prom.c,rev(promneg$prom.c)),
c(promneg$rtlo,rev(promneg$rthi)),
col=rgb(.1, 0.1, 0.1, 0.1),
border = NA)
lines(prompos$prom.c, prompos$rtpos, lty=1, lwd=4, col = "darkgreen")
lines(prompos$prom.c, prompos$rtlo, lty='solid', col = "darkgreen", lwd = .5)
lines(prompos$prom.c, prompos$rthi, lty='solid', col = "darkgreen", lwd = .5)
lines(promneg$prom.c, promneg$rtpos, lty='longdash', lwd=4, col = "gray30")
lines(promneg$prom.c, promneg$rtlo, lty='longdash', col = "gray30", lwd = .5)
lines(promneg$prom.c, promneg$rthi, lty='longdash', col = "gray30", lwd = .5)
legend(-2,6.15, c("Negatively Valenced Words", "Positively Valenced Words"),
lty=c('longdash','solid'), # gives the legend appropriate symbols (lines)
lwd=c(2,2),col=c('gray30','darkgreen'),
pch = c(1, 19), cex = 1.3, pt.cex = 1)
dev.off()
q()
=======
write.foreign(randata, "C:/Users/Niall/Documents/KZNB/randata.txt", "C:/Users/Niall/Documents/KZNB/randata.sps",   package="SPSS")
save.image("~/KZNB/RanData_Heterogeneity_170315.RData")
=======
>>>>>>> 8e36505591d4ae87f35fa8f8faa132058efd4dc4
>>>>>>> 52d1307f8e8ce879c888f2960c94c021d69432f5
library(bmlm)
5^2
library()
getwd()
load("~/KZNB/ranface-ran6.RData")
View(pred)
summary(ranfacem1)
intervals(ranfacem1)
library(nlme)
intervals(ranfacem1)
confint(ranfacem1)
anova(ranfacem1, ranfacem)0
anova(ranfacem1, ranfacem)
anova(ranfacem1, ranfacem0)
View(ranface)
quantiles(ranface$RT)
quantile(ranface$RT)
confint(ranface$RT, nsim = 1500)
confint(ranfacem1, nsim = 1500)
View(ran6)
ran6$logrt <- log(ran6$rt)
ran6mod1 <- lmer(logrt ~ congr*ptimer + (1 | subject), data = ran6)
summary(ran6mod1)
confint(ran6mod1, oldNames = FALSE)
ran6mod2 <- lmer(logrt ~ congr*ptimer + (1 + congr | subject), data = ran6)
summary(ran6mod2)
confint(ran6mod2, oldNames = FALSE)
anova(ran6mod1, ran6mod2)
summary(ran6mod2)
anova(ran6mod1, ran6mod2)
quantile(ran6$logrt)
ran6mod2.ranef<-ranef(ran6mod2)$subject
ran6mod2.ranef$subject <- as.numeric(row.names(ran6mod2.ranef))
ran6mod2.ranef$congr <- ran6mod2.ranef$congr -0.022654
ordran6mod2.ranef <- ran6mod2.ranef[order(ran6mod2.ranef$congr), ]
ran6$pred <- predict(ran6mod2)
#Order ranface by Participant, Face-orientation, predicted value
ordran6 <- ran6[order(ran6$subject,
ran6$congr, ran6$pred), ]
quantile(ran6mod2.ranef$congr)
pdf("ran6-log-fitted-panels.pdf", width = 10, height = 8)
par(mfrow=c(3,7))
for (i in ordran6mod2.ranef$subject) {
plot(jitter(ordran6$congr[ordran6$subject==i], .25),
ordran6$rt[ordran6$subject==i],
ylab="RT", xlab="Congruence",
type="p", pch=19, col="blue", ylim=c(4.6, 7.1), xlim=c(-0.5, .5),
main=paste(round(ordran6mod2.ranef$congr[ordran6mod2.ranef$subject==i], digits=2), sep = " "))
lines(ordran6$congr[ordran6$subject==i],
ordran6$pred[ordran6$subject==i], lwd=5, col="red")
}
dev.off()
pdf("ran6-log-fitted-panels.pdf", width = 10, height = 8)
par(mfrow=c(3,7))
for (i in ordran6mod2.ranef$subject) {
plot(jitter(ordran6$congr[ordran6$subject==i], .25),
ordran6$logrt[ordran6$subject==i],
ylab="RT", xlab="Congruence",
type="p", pch=19, col="blue", ylim=c(4.6, 7.1), xlim=c(-0.5, .5),
main=paste(round(ordran6mod2.ranef$congr[ordran6mod2.ranef$subject==i], digits=2), sep = " "))
lines(ordran6$congr[ordran6$subject==i],
ordran6$pred[ordran6$subject==i], lwd=5, col="red")
}
dev.off()
pdf("ran6-log-fitted-panels.pdf", width = 10, height = 8)
par(mfrow=c(3,7))
for (i in ordran6mod2.ranef$subject) {
plot(jitter(ordran6$congr[ordran6$subject==i], .25),
ordran6$logrt[ordran6$subject==i],
ylab="RT", xlab="Congruence",
type="p", pch=19, col="blue", ylim=c(5.8, 6.8), xlim=c(-0.5, .5),
main=paste(round(ordran6mod2.ranef$congr[ordran6mod2.ranef$subject==i], digits=2), sep = " "))
lines(ordran6$congr[ordran6$subject==i],
ordran6$pred[ordran6$subject==i], lwd=5, col="red")
}
dev.off()
View(ran6)
quantile(ran6$rt)
quantile(ran6$rt, c(0, .025, .5, .75, .975, 1))
hist(ran6$rt)
hist(ran6$logrt)
pdf("ran6-log-fitted-panels.pdf", width = 10, height = 8)
pdf("ran6-log-fitted-panels.pdf", width = 10, height = 8)
par(mfrow=c(3,7))
for (i in ordran6mod2.ranef$subject) {
plot(jitter(ordran6$congr[ordran6$subject==i], .25),
ordran6$logrt[ordran6$subject==i],
ylab="RT", xlab="Congruence",
type="p", pch=19, col="blue", ylim=c(6.0, 7.0), xlim=c(-0.4, .6),
main=paste(round(ordran6mod2.ranef$congr[ordran6mod2.ranef$subject==i], digits=2), sep = " "))
lines(ordran6$congr[ordran6$subject==i],
ordran6$pred[ordran6$subject==i], lwd=5, col="red")
}
dev.off()
pdf("ran6-log-fitted-panels.pdf", width = 10, height = 8)
par(mfrow=c(3,7))
for (i in ordran6mod2.ranef$subject) {
plot(jitter(ordran6$congr[ordran6$subject==i], .25),
ordran6$logrt[ordran6$subject==i],
ylab="RT", xlab="Congruence",
type="p", pch=19, col="blue", ylim=c(6.0, 7.0), xlim=c(-0.6, .6),
main=paste(round(ordran6mod2.ranef$congr[ordran6mod2.ranef$subject==i], digits=2), sep = " "))
lines(ordran6$congr[ordran6$subject==i],
ordran6$pred[ordran6$subject==i], lwd=5, col="red")
}
dev.off()
pdf("ran6-log-fitted-panels.pdf", width = 10, height = 8)
par(mfrow=c(3,7))
for (i in ordran6mod2.ranef$subject) {
plot(jitter(ordran6$congr[ordran6$subject==i], .35),
ordran6$logrt[ordran6$subject==i],
ylab="RT", xlab="Congruence",
type="p", pch=19, col="blue", ylim=c(6.0, 7.0), xlim=c(-0.6, .6),
main=paste(round(ordran6mod2.ranef$congr[ordran6mod2.ranef$subject==i], digits=2), sep = " "))
lines(ordran6$congr[ordran6$subject==i],
ordran6$pred[ordran6$subject==i], lwd=5, col="red")
}
dev.off()
pdf("ran6-log-fitted-panels.pdf", width = 10, height = 8)
par(mfrow=c(3,7))
for (i in ordran6mod2.ranef$subject) {
plot(jitter(ordran6$congr[ordran6$subject==i], .35),
jitter(ordran6$logrt[ordran6$subject==i], .1),
ylab="RT", xlab="Congruence",
type="p", pch=19, col="blue", ylim=c(6.0, 7.0), xlim=c(-0.6, .6),
main=paste(round(ordran6mod2.ranef$congr[ordran6mod2.ranef$subject==i], digits=2), sep = " "))
lines(ordran6$congr[ordran6$subject==i],
ordran6$pred[ordran6$subject==i], lwd=5, col="red")
}
dev.off()
pdf("ran6-log-fitted-panels.pdf", width = 10, height = 8)
par(mfrow=c(3,7))
for (i in ordran6mod2.ranef$subject) {
plot(jitter(ordran6$congr[ordran6$subject==i], .35),
jitter(ordran6$logrt[ordran6$subject==i], .1),
ylab="RT", xlab="Congruence",
type="p", pch=1, col="blue", ylim=c(6.0, 7.0), xlim=c(-0.6, .6),
main=paste(round(ordran6mod2.ranef$congr[ordran6mod2.ranef$subject==i], digits=2), sep = " "))
lines(ordran6$congr[ordran6$subject==i],
ordran6$pred[ordran6$subject==i], lwd=5, col="red")
}
dev.off()
pdf("ran6-log-fitted-panels.pdf", width = 10, height = 8)
par(mfrow=c(3,7))
for (i in ordran6mod2.ranef$subject) {
plot(jitter(ordran6$congr[ordran6$subject==i], .35),
jitter(ordran6$logrt[ordran6$subject==i], .15),
ylab="RT", xlab="Congruence",
type="p", pch=1, col="blue", ylim=c(6.0, 7.0), xlim=c(-0.55, .55),
main=paste(round(ordran6mod2.ranef$congr[ordran6mod2.ranef$subject==i], digits=2), sep = " "))
lines(ordran6$congr[ordran6$subject==i],
ordran6$pred[ordran6$subject==i], lwd=5, col="red")
}
dev.off()
pdf("ran6-fitted-panels.pdf", width = 10, height = 8)
par(mfrow=c(3,7))
for (i in ordran6mod2.ranef$subject) {
plot(jitter(ordran6$congr[ordran6$subject==i], .25),
ordran6$rt[ordran6$subject==i],
ylab="RT", xlab="Congruence",
type="p", pch=19, col="blue", ylim=c(200, 1100), xlim=c(-0.5, .5),
main=paste(round(ordran6mod2.ranef$congr[ordran6mod2.ranef$subject==i], digits=3), sep = " "))
lines(ordran6$congr[ordran6$subject==i],
ordran6$pred[ordran6$subject==i], lwd=5, col="red")
}
dev.off()
quantile(ran6mod2ranef$congr, probs=c(.025, .5, .975))
ran6mod2.ranef$congr <- ran6mod2.ranef$congr -0.022654
quantile(ran6mod2ranef$congr, probs=c(.025, .5, .975))
ran6mod2.ranef<-ranef(ran6mod2)$subject
ran6mod2.ranef$subject <- as.numeric(row.names(ran6mod2.ranef))
ran6mod2.ranef$congr <- ran6mod2.ranef$congr -0.022654
ordran6mod2.ranef <- ran6mod2.ranef[order(ran6mod2.ranef$congr), ]
#Add Predicted Values to ranface
ran6$pred <- predict(ran6mod2)
#Order ranface by Participant, Face-orientation, predicted value
ordran6 <- ran6[order(ran6$subject,
ran6$congr, ran6$pred), ]
pdf("ran6-log-fitted-panels.pdf", width = 10, height = 8)
par(mfrow=c(3,7))
for (i in ordran6mod2.ranef$subject) {
plot(jitter(ordran6$congr[ordran6$subject==i], .35),
jitter(ordran6$logrt[ordran6$subject==i], .15),
ylab="RT", xlab="Congruence",
type="p", pch=1, col="blue", ylim=c(6.0, 7.0), xlim=c(-0.55, .55),
main=paste(round(ordran6mod2.ranef$congr[ordran6mod2.ranef$subject==i], digits=2), sep = " "))
lines(ordran6$congr[ordran6$subject==i],
ordran6$pred[ordran6$subject==i], lwd=5, col="red")
}
dev.off()
quantile(ran6mod2.ranef$congr)
quantile(ran6mod2ranef$congr, probs=c(.025, .5, .975))
quantile(ran6mod2.ranef$congr, probs=c(.025, .5, .975))
pdf("random_ran6_log_dotplot.pdf", width = 16, height = 8)
stripchart(ran6mod2ranef, pch=21, bg="skyblue", cex=2, lwd=2,
xlim=c(-19, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
dev.off()
pdf("random_ran6_log_dotplot.pdf", width = 16, height = 8)
stripchart(ran6mod2.ranef$congr, pch=21, bg="skyblue", cex=2, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
dev.off()
pdf("random_ran6_log_dotplot.pdf", width = 16, height = 8)
stripchart(ran6mod2.ranef$congr, pch=1, bg="skyblue", cex=2, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
dev.off()
pdf("random_ran6_log_dotplot.pdf", width = 16, height = 8)
stripchart(jitter(ran6mod2.ranef$congr), pch=1, bg="skyblue", cex=2, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
dev.off()
pdf("random_ran6_log_dotplot.pdf", width = 16, height = 8)
stripchart(jitter(ran6mod2.ranef$congr, .2), pch=1, bg="skyblue", cex=2, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
dev.off()
#Add Predicted Values to ranface
pdf("random_ran6_log_dotplot.pdf", width = 16, height = 8)
stripchart(jitter(ran6mod2.ranef$congr, .2), pch=1, bg="skyblue", cex=2, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
dev.off()
pdf("random_ran6_log_dotplot.pdf", width = 16, height = 8)
stripchart(jitter(ran6mod2.ranef$congr, .5), pch=1, bg="skyblue", cex=2, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
dev.off()
pdf("random_ran6_log_dotplot.pdf", width = 16, height = 8)
pdf("random_ran6_log_dotplot.pdf", width = 16, height = 8)
stripchart(ran6mod2.ranef$congr, pch=1, bg="skyblue", cex=2, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
dev.off()
summary(ran6mod2)
confint(ran6mod2, parm="beta_", oldNames = FALSE)
confint(ran6mod2, parm="theta_", oldNames = FALSE)
confint(ran6mod2, parm=c(1:4), oldNames = FALSE)
confint(ran6mod2, parm=c5, oldNames = FALSE)
confint(ran6mod2, parm=5, oldNames = FALSE)
summary(ran6mod2)
anova(ran6mod1, ran6mod2)
stripchart(ran6mod2.ranef$congr, pch=1, bg="skyblue", cex=2, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
windows()
stripchart(ran6mod2.ranef$congr, pch=1, bg="skyblue", cex=2, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
windows()
stripchart(ran6mod2.ranef$congr, pch=1, bg="skyblue", cex=3, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
windows()
stripchart(ran6mod2.ranef$congr, pch=1, bg="skyblue", cex=3, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
pdf("random_ran6_log_dotplot.pdf", width = 7, height = 2.5)
pdf("random_ran6_log_dotplot.pdf", width = 7, height = 2.5)
stripchart(ran6mod2.ranef$congr, pch=1, bg="skyblue", cex=3, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log RT between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
dev.off()
pdf("random_ran6_log_dotplot.pdf", width = 7, height = 2.5)
stripchart(ran6mod2.ranef$congr, pch=1, bg="skyblue", cex=3, lwd=2,
xlim=c(-.027, -0), xlab="Congruent vs. Incongruent Differences in log RT", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
dev.off()
pdf("random_ran6_log_dotplot.pdf", width = 8, height = 3.0)
stripchart(ran6mod2.ranef$congr, pch=1, bg="skyblue", cex=3, lwd=2,
xlim=c(-.027, -0), xlab="Heterogeneity in Congruency Effect (log RT units)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
dev.off()
pdf("ranface-ranef-dotplot.pdf", width = 8, height = 3)
stripchart(ranfacem1.ranef$fo1, pch=1, bg="skyblue", cex=3, lwd=2,
xlim=c(-0.45, .05), xlab="Heterogeneity Face Orientation Effect (logRT units)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.36, -0.21, -.01), col = c("red", "black", "red"),
lwd = 3)
dev.off()
pdf("ranface-ranef-log-dotplot.pdf", width = 8, height = 3)
stripchart(ranfacem1.ranef$fo1, pch=1, bg="skyblue", cex=3, lwd=2,
xlim=c(-0.45, .05), xlab="Heterogeneity in Face Orientation Effect (logRT units)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.36, -0.21, -.01), col = c("red", "black", "red"),
lwd = 3)
dev.off()
summary(rndbrm2)
c(-162 - 2*143, -162 + 2*143)
143/162
-448/162
124/162
save.image("~/KZNB/ranface-ran6.RData")
load("~/KZNB/rndtzz.Rdata.RData")
summary(mle2aa)
summary(mle3aa)
confmle3aa
exp(6.86632)
exp(6.86632 -0.16157)
exp(6.86632)- exp(6.86632 --0.16157)
exp(c(-0.20647785, -0.1188546))
ranef.mle3aa<- -0.16157 + ranef(mle3aa)$id[,2] #ValencE column
quantile(ranef.mle3aa, probs=c(.025, .975))
quantile(ranef.mle3aa, probs=c(0, 1))
c(-0.16157 - 2*0.125, -0.16157 + 2*0.125)
stripchart(ranef.mle3bb, pch=21, bg="red", cex=3.5, lwd=2,
xlim=c(-.4, .0286), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.332, -0.16157, .0068), col = c("red", "black", "red"),
lwd = 3)
stripchart(ranef.mle3aa, pch=21, bg="red", cex=3.5, lwd=2,
xlim=c(-450, 50), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-382, -162.01, 16.9), col = c("red", "black", "red"),
lwd = 3)
stripchart(ranef.mle3bb, pch=21, bg="red", cex=3.5, lwd=2,
xlim=c(-.4, .0286), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.332, -0.16157, .0068), col = c("red", "black", "red"),
lwd = 3)
stripchart(ranef.mle3bb, pch=21, bg="red", cex=3.5, lwd=2,
xlim=c(-.4, .0286), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.332, -0.16157, .0068), col = c("red", "black", "red"),
lwd = 3)
stripchart(ranef.mle3aa, pch=21, bg="red", cex=3.5, lwd=2,
xlim=c(-.4, .0286), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.332, -0.16157, .0068), col = c("red", "black", "red"),
lwd = 3)
stripchart(ranef.mle3aa, pch=21, bg="red", cex=3.5, lwd=2,
xlim=c(-.4, .0286), xlab="Trait Valence Effect (logRT units)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.332, -0.16157, .0068), col = c("red", "black", "red"),
lwd = 3)
quantile(ranef.mle3aa, probs=c(.025, .975))
View(aggs1aawide)
View(aggs1aa)
summary(aggs1aa.out)
summary(aggs1aa.out)
summary(mle2aa)
>>>>>>> ea534aee4636fc0fd5ff46d73e6cbceb6ba6b5ac
