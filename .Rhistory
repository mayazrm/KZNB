plot(density(rndtb2$logrt), xlim=c(-1, .5), ylim=c(0, 2))
plot(density(pp[1,]), xlim=c(-1, .5), ylim=c(0, 2))
plot(density(pp[2,]), xlim=c(-1, .5), ylim=c(0, 2))
plot(density(pp[3,]), xlim=c(-1, .5), ylim=c(0, 2))
par(mfrow=c(4,1))
plot(density(rndtb2$logrt), xlim=c(-1, 1.5), ylim=c(0, 1.5))
plot(density(pp[1,]), xlim=c(-1, .5), ylim=c(0, 2))
plot(density(pp[2,]), xlim=c(-1, .5), ylim=c(0, 2))
plot(density(pp[3,]), xlim=c(-1, .5), ylim=c(0, 2))
par(mfrow=c(4,1))
plot(density(rndtb2$logrt), xlim=c(-1, 1), ylim=c(0, 1.5))
plot(density(pp[1,]), xlim=c(-1, 1), ylim=c(0, 1.5))
plot(density(pp[2,]), xlim=c(-1, 1), ylim=c(0, 1.5))
plot(density(pp[3,]), xlim=c(-1, 1), ylim=c(0, 1.5))
save.image("~/KZNB/hetergeneity1.RData")
load("~/KZNB/hetergeneity1.RData")
library(car)
library(nlme)
library(lme4)
library(brms)
View(rndtb2)
#Create effect-coded valence;
rnd$valenceE <-recode(rnd$valence, as.factor.result=F, '"negative" = -0.5; "positive" = 0.5')
rndtb <- subset(rnd, rt >= .01 & rt < 2)
rndtb2 <- subset(rndtb, key == "up")
rm(valenceslope.brm)
rndbrm0<- brm(rt ~ trial40c + valenceE , data = rndtb2, chains = 2, cores = 4)
summary(rndbrm2)
rndbrm2 <- brm(rt ~ valenceE + trial40c + (1 + valenceE + trial40c | id),
data=rndtb2, chains=2, cores=4)
summary(rndbrm2)
rebrm2 <- ranef(rndbrm2)
mean(rebrm2$id[,2])
reval.brm2 <- (rebrm2$id[,2] + fixef(rndbrm2)[2,1]) #Create predicted re's
REbrm2 <- cbind(unique(rndtb2$id), reval.brm2)
ordrebrm2 <- REbrm2[order(REbrm2[, 2]), ] #Ordered by reval.brm2 (second column of REbrm2)
mebrm2 <- marginal_effects(rndbrm2, effects = "valenceE",
conditions = data.frame(id = unique(rndtb2$id), trial40c = 0),
re_formula = NULL, points=TRUE)
save.image("~/KZNB/hetergeneity1.RData")
View(ordrebrm2)
pdf(file="predrt-spaghetti-plot.pdf", width=14, height=10)
plot(rndtb2$valenceE, rndtb2$rt, ylab="Predicted RT (seconds)", xlab="Valence (-.5,+.5)",
type="n", cex=2, lwd=2.5, bg="skyblue", ylim=c(0,2), xlim=c(-0.7, 0.7))
for (i in ordrebrm2[,1])
{
lines(mebrm2$valenceE$valenceE[mebrm2$valenceE$id==i],
mebrm2$valenceE$Estimate[mebrm2$valenceE$id==i], lty=1, lwd=1.5, col="black")
}
# #Add in fixed effects line for Invisible Condition
# lines(predinv[, 1], predinv[, 2], lwd=5, col="red")
# abline(v=c(5, 10))
#
dev.off()
pdf(file="predrt-spaghetti-plot.pdf", width=14, height=10)
plot(rndtb2$valenceE, rndtb2$rt, ylab="Predicted RT (seconds)", xlab="Valence (-.5,+.5)",
type="n", cex=2, lwd=2.5, bg="skyblue", ylim=c(.5,1.5), xlim=c(-0.5, 0.5))
for (i in ordrebrm2[,1])
{
lines(mebrm2$valenceE$valenceE[mebrm2$valenceE$id==i],
mebrm2$valenceE$Estimate[mebrm2$valenceE$id==i], lty=1, lwd=1.5, col="black")
}
# #Add in fixed effects line for Invisible Condition
# lines(predinv[, 1], predinv[, 2], lwd=5, col="red")
# abline(v=c(5, 10))
#
dev.off()
pdf(file="predrt-spaghetti-plot.pdf", width=10, height=10)
plot(rndtb2$valenceE, rndtb2$rt, ylab="Predicted RT (seconds)", xlab="Valence (-.5,+.5)",
type="n", cex=2, lwd=2.5, bg="skyblue", ylim=c(.6,1.4), xlim=c(-0.5, 0.5))
for (i in ordrebrm2[,1])
{
lines(mebrm2$valenceE$valenceE[mebrm2$valenceE$id==i],
mebrm2$valenceE$Estimate[mebrm2$valenceE$id==i], lty=1, lwd=1.5, col="black")
}
# #Add in fixed effects line for Invisible Condition
# lines(predinv[, 1], predinv[, 2], lwd=5, col="red")
# abline(v=c(5, 10))
#
dev.off()
##Spaghetti Plot
pdf(file="predrt-spaghetti-plot.pdf", width=7, height=10)
plot(rndtb2$valenceE, rndtb2$rt, ylab="Predicted RT (seconds)", xlab="Valence (-.5,+.5)",
type="n", cex=2, lwd=2.5, bg="skyblue", ylim=c(.7,1.4), xlim=c(-0.5, 0.5))
for (i in ordrebrm2[,1])
{
lines(mebrm2$valenceE$valenceE[mebrm2$valenceE$id==i],
mebrm2$valenceE$Estimate[mebrm2$valenceE$id==i], lty=1, lwd=1.5, col="black")
}
# #Add in fixed effects line for Invisible Condition
# lines(predinv[, 1], predinv[, 2], lwd=5, col="red")
# abline(v=c(5, 10))
#
dev.off()
##Spaghetti Plot
pdf(file="predrt-spaghetti-plot.pdf", width=4, height=8)
plot(rndtb2$valenceE, rndtb2$rt, ylab="Predicted RT (seconds)", xlab="Valence (-.5,+.5)",
type="n", cex=2, lwd=2.5, bg="skyblue", ylim=c(.7,1.4), xlim=c(-0.5, 0.5))
for (i in ordrebrm2[,1])
{
lines(mebrm2$valenceE$valenceE[mebrm2$valenceE$id==i],
mebrm2$valenceE$Estimate[mebrm2$valenceE$id==i], lty=1, lwd=1.5, col="black")
}
# #Add in fixed effects line for Invisible Condition
# lines(predinv[, 1], predinv[, 2], lwd=5, col="red")
# abline(v=c(5, 10))
#
dev.off()
fixef(rndbrm2)
fixef(rndbrm2)[2]
predrt.fixed <- fixef(rndbrm2)[1] +
fixef(rndbrm2)[2]*mebrm2$valenceE$valenceE[mebrm2$valenceE$id==101]
predrt.fixed
pdf(file="predrt-spaghetti-plot.pdf", width=4, height=8)
plot(rndtb2$valenceE, rndtb2$rt, ylab="Predicted RT (seconds)", xlab="Valence (-.5,+.5)",
type="n", cex=2, lwd=2.5, bg="skyblue", ylim=c(.7,1.4), xlim=c(-0.5, 0.5))
for (i in ordrebrm2[,1])
{
lines(mebrm2$valenceE$valenceE[mebrm2$valenceE$id==i],
mebrm2$valenceE$Estimate[mebrm2$valenceE$id==i], lty=1, lwd=1.5, col="black")
}
#Add in fixed effects line
lines(predrt.fixed, mebrm2$valenceE$valenceE[mebrm2$valenceE$id==101], lwd=5, col="red")
dev.off()
pdf(file="predrt-spaghetti-plot.pdf", width=4, height=8)
plot(rndtb2$valenceE, rndtb2$rt, ylab="Predicted RT (seconds)", xlab="Valence (-.5,+.5)",
type="n", cex=2, lwd=2.5, bg="skyblue", ylim=c(.7,1.4), xlim=c(-0.5, 0.5))
for (i in ordrebrm2[,1])
{
lines(mebrm2$valenceE$valenceE[mebrm2$valenceE$id==i],
mebrm2$valenceE$Estimate[mebrm2$valenceE$id==i], lty=1, lwd=1.5, col="black")
}
#Add in fixed effects line
lines(mebrm2$valenceE$valenceE[mebrm2$valenceE$id==101], predrt.fixed, lwd=5, col="red")
dev.off()
save.image("~/KZNB/hetergeneity1.RData")
load("~/KZNB/hetergeneity1.RData")
View(rndtb2)
rndlme2 <- lme(rt ~ valenceE + trial40c + (1 + valenceE + trial40c | id),
data=rndtb2)
summary(rndlme2)
library(car)
library(nlme)
library(lme4)
library(brms)
rndlme2 <- lme(rt ~ valenceE + trial40c + (1 + valenceE + trial40c | id),
data=rndtb2)
summary(rndlme2)
View(rndtb2)
rndlmer2 <- lmer(rt ~ valenceE + trial40c + (1 + valenceE + trial40c | id),
data=rndtb2)
summary(rndlmer2)
rndlmer2a <- lme(rt ~ valenceE + trial40c + (1 + valenceE + trial40c | id)
+ (1 | word), data=rndtb2)
summary(rndlmer2a)
rndlmer2a <- lmer(rt ~ valenceE + trial40c + (1 + valenceE + trial40c | id)
+ (1 | word), data=rndtb2)
summary(rndlmer2a)
#Run Bayesian model: stimuli are random
rndbrm2a <- brm(rt ~ valenceE + trial40c + (1 + valenceE + trial40c | id)
+ (1 | word), data=rndtb2, chains=2, cores=4)
summary(rndbrm2a)
devtools::install_github("mvuorre/bmlm")
save.image("~/KZNB/hetergeneity1.RData")
library(car)
library(nlme)
library(lme4)
library(brms)
load("~/KZNB/hetergeneity1.RData")
rndbrm0<- brm(rt ~ trial40c + valenceE , data = rndtb2, chains = 2, cores = 4)
summary(rndbrm0)
R.Version()
sqrt(.003)
remove.packages("rstan")
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M)) file.create(M)
cat("\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function",
file = M, sep = "\n", append = TRUE)
cat('Sys.setenv(BINPREF = "C:/Rtools/mingw_$(WIN)/bin/")',
file = file.path(Sys.getenv("HOME"), ".Rprofile"),
sep = "\n", append = TRUE)
install.packages('rstan', repos = 'https://cloud.r-project.org/', dependencies = TRUE)
load("~/KZNB/hetergeneity1.RData")
install.packages("brms")
install.packages("lme4")
library(lme4)
library(brms)
rndbrm0<- brm(rt ~ trial40c + valenceE , data = rndtb2, chains = 2, cores = 4)
load("~/KZNB/hetergeneity1.RData")
rndbrm0<- brm(rt ~ trial40c + valenceE , data = rndtb2, chains = 2, cores = 4)
summary(rndbrm0)
library(brms)
library(lme4)
rndbrm0<- brm(rt ~ trial40c + valenceE , data = rndtb2, chains = 2, cores = 4)
summary(rndbrm0)
summary(rndbrm2a)
rndlmer2b <- lmer(rt ~ valenceE + trial40c
+ (1 | word), data=rndtb2)
summary(rndlmer2b)
summary(rndlmer2)
summary(rndbrm2a)
rebrm2a<-ranef(rndbrm2a)
head(rebrm2a)
head(rebrm2a$word)
str(rebrm2a$word)
ordrebrm2.word <- rebrm2a$word[order(rebrm2a$word[, 1]), ] #Ordered by reval.brm2 (by size of rt)
head(rebrm2a.word)
head(ordrebrm2a.word)
ordrebrm2a.word <- rebrm2a$word[order(rebrm2a$word[, 1]), ] #Ordered by reval.brm2 (by size of rt)
head(ordrebrm2a.word)
rebrm2a<-ranef(rndbrm2a) + 1.07
rebrm2a<-(ranef(rndbrm2a)) + 1.07
head(rebrm2a$word)
ordrebrm2a.word <- rebrm2a$word[order(rebrm2a$word[, 1]), ] + 1.07 #Ordered by reval.brm2 (by size of rt)
head(ordrebrm2a.word)
print(ordrebrm2a.word)
summary(rndlmer2b)
pdf(file="predrt-by-valence1.pdf", width=30, height=22)
par(mfrow=c(5,14))
for (i in unique(rndtb2$id)) {
plot(mebrm2$valenceE$valenceE[mebrm2$valenceE$id==i],
mebrm2$valenceE$Estimate[mebrm2$valenceE$id==i],
ylab="Predicted RT (seconds)", xlab="Valence (-.5,+.5)",
type="l", cex=2, lwd=2.5, bg="skyblue", ylim=c(0,2), xlim=c(-0.7, 0.7),
main=paste("id ", round(i, digits=3), sep = " "))
lines(mebrm2$valenceE$valenceE[mebrm2$valenceE$id==i],
mebrm2$valenceE$lowerCI[mebrm2$valenceE$id==i], lty=1, lwd=1.5, col="black")
lines(mebrm2$valenceE$valenceE[mebrm2$valenceE$id==i],
mebrm2$valenceE$upperCI[mebrm2$valenceE$id==i], lty=1, lwd=1.5, col="black")
points(rndtb2$valenceE[rndtb2$id==i], rndtb2$rt[rndtb2$id==i], pch=21, cex=1.2, bg="skyblue")
#abline(v=c(5, 6, 10))
}
dev.off()
save.image("~/KZNB/hetergeneity1.RData")
load("~/KZNB/hetergeneity1.RData")
rndbrm2asamp <- posterior_samples(rndbrm2a, "^sd")
library(car)
library(nlme)
library(lme4)
library(brms)
summary(rndbrm2a)
rndbrm2asamp <- posterior_samples(rndbrm2a, "^sd")
head(rndbrm2asamp)
hist(rndbrm2asamp$sd_id_valenceE)
plot(density(rndbrm2asamp$sd_id_valenceE))
plot(density(rndbrm2asamp$sd_word_Intercept))
sd(rebrm2$id[,2])
rndbrm2a.stancode <- stancode(rndbrm2a)
rndbrm2a.stancode
rndbrm2a.stancode
head(rndbrm2asamp)
scatterplot(rndbrm2asamp$sd_word_Intercept, rndbrm2asamp$sd_id_valenceE)
scatterplot(rndbrm2asamp$sd_word_Intercept, rndbrm2asamp$sd_id_valenceE,
xlim = c(0, 0.17), ylim = c(0, 0.17))
save.image("~/KZNB/hetergeneity1.RData")
load("~/KZNB/hetergeneity1.RData")
summary(rndbrm2a)
ranef(rndbrm2a)
library(car)
library(nlme)
library(lme4)
library(brms)
ranef(rndbrm2a)
sort(ranef(rndbrm2a)$word)
sqrt(.085)
load("~/KZNB/hetergeneity1.RData")
load("~/KZNB/hetergeneity1.RData")
summary(rndlmer2)
summary(rndlmer2a)
library(car)
library(nlme)
library(lme4)
library(brms)
anova.lme(rndlmer2, rndlmer2a, rndlmer2b)
anova.lme(rndlmer2, rndlmer2a)
anova(rndlmer2, rndlmer2a)
anova(rndlmer2, rndlmer2b)
anova(rndbrm2, rndbrm2b)
summary(rndbrm2)
LOO(rndbrm2, rndbrm2b)
LOO(rndbrm2, rndbrm2a)
WAIC(rndbrm2, rndbrm2a)
summary(rndbrm2)
summary(rndbrm2a)
setwd("C:/Users/Niall/Dropbox/NIALL1/MET/Analysis of Change Course/2014 Fall/Lecture 1/R")
load("C:/Users/Niall/Dropbox/NIALL1/MET/Analysis of Change Course/2014 Fall/Lecture 1/R/RTtiny.RData")
View(RTtiny)
sqrt(.003)
sqrt(.006)
sqrt(.007)
setwd("~/KZNB")
rnd <- read.csv("randomproject_data_aggregated_161021.csv")
library(nlme)
library(lme4)
library(ggplot2)
library(lmerTest)
theme_set(theme_bw(base_size = 14))
#For Bayesian analysis:
library(brms)
#For dotplots
library(Rcmdr)
rnd$trial40 <- (rnd$trials.thisN + 1)
rnd$trial40c <- (rnd$trial40 - 20)/40
ggplot(rnd, aes(x=response.rt)) +
geom_density()
hist(rnd$response.rt)
# trimmed data: removed any < 100 ms and any greater than 3 SD above mean (1.29+.8*3=3.69)
sd(rnd$response.rt, na.rm=T) # SD = 0.35
summary(rnd$response.rt, na.rm=T) # M = 1.02
#rndt <- subset(rnd, rt >= .01 & rt < 3.69)
rndt <- rnd
rndt$rt <- rndt$response.rt
rndt$logrt <- log(rndt$response.rt)
# log rt density plot - normal !
ggplot(rndt, aes(x=logrt)) +
geom_density()
rndt$id <- rndt$ID
rndt$valenceE <-recode(rndt$valence, as.factor.result=F, '"negative" = -0.5; "positive" = 0.5')
rndtb2$rt.z <- scale(rndtb2$rt)
sort(rndtb2$rt.z)
rndtz <- subset(rndtb2,  rt.z < 3) #within 3 SD of the mean RT
rndtb2 <- subset(rndt, response.keys == "up")
rndtb2$rt.z <- scale(rndtb2$rt)
sort(rndtb2$rt.z)
rndtz <- subset(rndtb2,  rt.z < 3) #within 3 SD of the mean RT
summary(lmer(rt ~ valenceE + trial40c + (1 + valenceE| id),  data=rndtz))
summary(lmer(rt ~ valenceE + trial40c + (1 + valenceE + trial40c| id) + (1 | word),  data=rndtz))
getwd()
load("~/KZNB/ran6bayes.RData")
summary(modelslopeb)
0.07413 + ranef(modelslopeb)$SubjectNumber[2]
str(ranef(modelslopeb))
head(ranef(modelslopeb))
head(ranef(modelslopeb)[2])
head(ranef(modelslopeb)$SubjecNumber[2])
head(ranef(modelslopeb)$SubjecNumber$val)
head(ranef(modelslopeb)$SubjecNumber[,2])
modelslopebranef<-ranef(modelslopeb)
modelslopebrane[[1]]
modelslopebranef[[1]]
modelslopebranef[["SubjectNumber"]]
head(ranef(modelslopeb)[[1]]$val)
modelslopebranef[["SubjectNumber"]][,1]
modelslopebranef[["SubjectNumber"]][,2]
mean(modelslopebranef[["SubjectNumber"]][,2])
modelslopebranef<-ranef(modelslopeb)[["SubjectNumber"]][,2]
mean(modelslopebranef)
modelslopeb.var.pred <- 07413 + ranef(modelslopeb)[["SubjectNumber"]][,2]
modelslopeb.var.pred <- 0.07413 + ranef(modelslopeb)[["SubjectNumber"]][,2]
library(nlme)
library(lme4)
library(ggplot2)
library(lmerTest)
theme_set(theme_bw(base_size = 14))
#For Bayesian analysis:
library(brms)
stripchart(modelslopeb.var.pred, pch=21, bg="skyblue", cex=2, lwd=2,
xlim=c(-.03, .30), xlab="Difference in Reaction Times as a Function of Valence", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.02, .05, .26), col = c("red", "black", "red"),
lwd = 3)
stripchart(modelsloperanef, pch=21, bg="skyblue", cex=2, lwd=2,
xlim=c(-.03, .30), xlab="Difference in Reaction Times as a Function of Valence", cex.axis=1.5, cex.lab=1.5)
summary(modelslope)
modelslope <- lmer(RT ~ val + (val | SubjectNumber) + (1 | item), data = randata)
summary(modelslope)
confint(modelint, oldNames=FALSE)
modelsloperanef <- 0.07413 + ranef(modelslope)$SubjectNumber[2]
quantile(modelsloperanef$val, probs=c(.025, .5, .975))
stripchart(modelsloperanef, pch=21, bg="skyblue", cex=2, lwd=2,
xlim=c(-.03, .30), xlab="Difference in Reaction Times as a Function of Valence", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.02, .05, .26), col = c("red", "black", "red"),
lwd = 3)
stripchart(modelsloperanef, pch=21, bg="skyblue", cex=2, lwd=2,
xlim=c(-.03, .30), xlab="Difference in Reaction Times as a Function of Valence", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.02, .05, .26), col = c("red", "black", "red"),
lwd = 3)
stripchart(modelslopeb.var.pred, pch=21, bg="skyblue", cex=2, lwd=2,
xlim=c(-.03, .30), xlab="Difference in Reaction Times as a Function of Valence", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.02, .05, .26), col = c("red", "black", "red"),
lwd = 3)
windows()
stripchart(modelslopeb.var.pred, pch=21, bg="skyblue", cex=2, lwd=2,
xlim=c(-.03, .30), xlab="Difference in Reaction Times as a Function of Valence", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.02, .05, .26), col = c("red", "black", "red"),
lwd = 3)
stripchart(modelslopeb.var.pred, pch=21, bg="skyblue", cex=2, lwd=2,
xlim=c(-.03, .30), xlab="Bayes: Diff in Reaction Times as a Function of Valence", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.02, .05, .26), col = c("red", "black", "red"),
lwd = 3)
stripchart(modelsloperanef, pch=21, bg="skyblue", cex=2, lwd=2,
xlim=c(-.03, .30), xlab="ML: Diff in Reaction Times as a Function of Valence", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.02, .05, .26), col = c("red", "black", "red"),
lwd = 3)
windows()
stripchart(modelsloperanef, pch=21, bg="skyblue", cex=2, lwd=2,
xlim=c(-.03, .30), xlab="ML: Diff in Reaction Times as a Function of Valence", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.02, .05, .26), col = c("red", "black", "red"),
lwd = 3)
windows()
stripchart(modelsloperanef, pch=21, bg="skyblue", cex=2, lwd=2,
xlim=c(-.03, .30), xlab="ML: Diff in Reaction Times as a Function of Valence", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.02, .05, .26), col = c("red", "black", "red"),
lwd = 3)
windows()
stripchart(modelsloperanef, pch=21, bg="skyblue", cex=2, lwd=2,
xlim=c(-.03, .30), xlab="ML: Diff in Reaction Times as a Function of Valence", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.02, .05, .26), col = c("red", "black", "red"),
lwd = 3)
fixef(modelslopeb)
modelslopeb.var.pred <- 0.07179325 + ranef(modelslopeb)[["SubjectNumber"]][,2]
windows()
stripchart(modelslopeb.var.pred, pch=21, bg="skyblue", cex=2, lwd=2,
xlim=c(-.03, .30), xlab="Bayes: Diff in Reaction Times as a Function of Valence", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.02, .05, .26), col = c("red", "black", "red"),
lwd = 3)
summary(modelslope)
summary(modelslopeb)
str(modelslopeb)
summary(modelslopeb, digits = 3)
str(print(modelslopb, digits = 3))
str(print(modelslopeb, digits = 3))
print(modelslopeb, digits = 3)
modelslopeb <- brm(RT ~ val + (val | SubjectNumber), data = randata,
chains = 6, cores = 4, iter = 4000)
summary(modelslopeb)
WAIC(modelintb, modelslopeb)
print(modelslopeb, digits = 3)
modelslopeb.var.pred <- 0.07179325 + ranef(modelslopeb)[["SubjectNumber"]][,2]
windows()
stripchart(modelslopeb.var.pred, pch=21, bg="skyblue", cex=2, lwd=2,
xlim=c(-.03, .30), xlab="Bayes: Diff in Reaction Times as a Function of Valence", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.02, .05, .26), col = c("red", "black", "red"),
lwd = 3)
summary(modelslope)
print(modintb, digits = 3)
print(modelintb, digits = 3)
?hpdi
??hpdi
library(rethinking)
HPDI(post.ran6mod2b$sd_subject_congr)
HPDI(post.ran6mod2b$sd_subject_congr, prob = .95)
hist(post.ran6mod2b$sd_subject_congr, breaks=50)
print(ran6mod2b, digits = 3)
summary(ran6mod2)
confint(ran6mod2, oldNames = FALSE)
save.image("~/KZNB/ran6bayes.RData")
save.image("C:/Users/Niall/Dropbox/NIALL1/MET/Suppes Talk/Heterogeneity/ran6bayes.RData")
head(ranef(modelslopeb)[[1]]$val)
load("~/KZNB/ran6bayes.RData")
library(nlme)
library(lme4)
library(ggplot2)
library(lmerTest)
theme_set(theme_bw(base_size = 14))
#For Bayesian analysis:
library(brms)
library(rethinking)
#For dotplots
library(Rcmdr)
hist(post.ran6mod2b$sd_subject_congr, breaks=50)median(post.ran6mod2b$sd_subject_congr)
hist(post.ran6mod2b$sd_subject_congr, breaks=50)
hist(post.ran7mod2b$sd_subject_congr, breaks=50)
hist(post.ran6mod2b$sd_subject_congr, breaks=50, xlim=c(0,40))
hist(post.ran7mod2b$sd_subject_congr, breaks=50, xlim = c(0,40))
par(mfrow=c(2,1))
hist(post.ran7mod2b$sd_subject_congr, breaks=50, xlim = c(0,40))
hist(post.ran6mod2b$sd_subject_congr, breaks=50, xlim=c(0,40))
par(mfrow=c(1,1))
hist(post.ran7mod2b$sd_subject_congr, breaks=50, xlim = c(0,40))
hist(post.ran6mod2b$sd_subject_congr, breaks=50, xlim=c(0,40))
hist(post.ran7mod2b$sd_subject_congr, breaks=50, xlim = c(0,40))
hist(post.ran6mod2b$sd_subject_congr, breaks=50, xlim=c(0,40))
windows()
hist(post.ran7mod2b$sd_subject_congr, breaks=50, xlim = c(0,40))
windows()
hist(post.ran6mod2b$sd_subject_congr, breaks=50, xlim=c(0,40))
View(randata)
View(randata)
hist(post.modelslopeb$sd_SubjectNumber_val, breaks=50)
hist(post.modelslopeb$sd_SubjectNumber_val, breaks=50)
windows()
stripchart(modelslopeb.var.pred, pch=21, bg="skyblue", cex=2, lwd=2,
xlim=c(-.03, .30), xlab="Bayes: Diff in Reaction Times as a Function of Valence", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.02, .05, .26), col = c("red", "black", "red"),
lwd = 3)
lwd = 3)
windows()
stripchart(modelslopeb.var.pred, pch=21, bg="skyblue", cex=2, lwd=2,
xlim=c(-.03, .30), xlab="Bayes: Diff in Reaction Times as a Function of Valence", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.02, .05, .26), col = c("red", "black", "red"),
lwd = 3)
post.modpredint<-posterior.samples(modpredint)
hist(post.modpredint$sd_SubjectNumber_val, breaks=50)
median(post.modpredint$sd_SubjectNumber_val)
hist(post.modelslopeb$sd_SubjectNumber_val, breaks=50)
median(post.modelslopeb$sd_SubjectNumber_val)
View(modelsloperanef)
save.image("C:/Users/Niall/Dropbox/NIALL1/MET/Suppes Talk/Heterogeneity/ran6bayes.RData")
load("C:/Users/Niall/Dropbox/NIALL1/MET/Suppes Talk/Heterogeneity/ran6bayes.RData")
setwd("~/KZNB")
getwd()
library(nlme)
library(lme4)
library(ggplot2)
library(lmerTest)
theme_set(theme_bw(base_size = 14))
#For Bayesian analysis:
library(brms)
#For dotplots
library(Rcmdr)
