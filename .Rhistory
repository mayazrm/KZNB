View(ran7m)
ran7m$math_anxiety.c <- scale(ran7m$math_anxiety, center=T, scale=F)
ran7m$math_self_rating.c <- scale(ran7m$math_self_rating, center=T, scale=F)
ran7mod2math <- lmer(rt ~ congr*ptimer + congr*math_anxiety.c + (1 + congr | subject), data = ran7m)
summary(ran7mod2math)
ran7mod2math2 <- lmer(rt ~ congr*ptimer + congr*math_self_rating.c + (1 + congr | subject), data = ran7m)
summary(ran7mod2math2)
ran7mod2math <- lmer(rt ~ congr*ptimer + congr*math_anxiety.c + (1 | subject), data = ran7m)
summary(ran7mod2math)
ran7mod2math <- lmer(rt ~ congr*ptimer + congr*math_anxiety.c + (1 + congr | subject), data = ran7m)
summary(ran7mod2math)
View(randata)
summary(randata$val)
summary(modelslope)
modelslopeb1 <- brm(RT ~ val + (val | SubjectNumber) + (1 | item), data = randata, chains = 3, cores = 4)
summary(modelslopeb)
summary(modelslopeb1)
confint(modelslope, oldNames=FALSE)
WAIC(modelintb, modelslopeb)
summary(modelintb)
WAIC(modelintb)
WAIC(modelintb, modelslopeb)
hist(post.modelslopeb$sd_SubjectNumber__val, breaks=50)
post.modelslopeb<-posterior_samples(modelslopeb)
hist(post.modelslopeb$sd_SubjectNumber__val, breaks=50)
View(post.modelslopeb)
View(post.modelslopeb)
hist(as.numeric(post.modelslopeb$sd_SubjectNumber__val), breaks=50)
median(post.modelslopeb$sd_SubjectNumber__val)
View(randata)
modelslopeb <- brm(RT ~ val + (val | SubjectNumber), data = randata, chains = 3, cores = 4)
summary(modelslopeb)
WAIC(modelintb, modelslopeb)
post.modelslopeb<-posterior_samples(modelslopeb)
hist(post.modelslopeb$sd_SubjectNumber_val)
hist(post.modelslopeb$sd_SubjectNumber_val, breaks=50)
hist(post.modelslopeb$sd_SubjectNumber_val, breaks=10)
hist(post.modelslopeb$sd_SubjectNumber_val)
hist(post.modelslopeb$sd_SubjectNumber_val, breaks=50)
median(post.modelslopeb$sd_SubjectNumber_val)
save.image("~/KZNB/RanData_Heterogeneity_170315.RData")
anova(modelint, modelslope)
AIC(modelint, modelslope)
anova(modelint, modelslope)
AIC(modelintb, modelslopeb)
modelint <- lmer(RT ~ val + (1 | SubjectNumber), data = randata)
summary(modelint)
summary(modelslope)
modelslope <- lmer(RT ~ val + (val | SubjectNumber), data = randata)
summary(modelslope)
summary(modelintb)
summary(modelslopeb)
anova(modelint, modelslope)
summary(modelslopeb)
AIC(modelintb, modelslopeb)
AIC(modelintb)
WAIC(modelintb, modelslopeb)
WAIC(modelintb, modelslopeb1)
bm.modelsloperanef <- 0.07 + ranef(modelslopeb)$SubjectNumber[,2]
quantile(bm.modelsloperanef, probs=c(.025, .5, .975))
quantile(modelsloperanef$val, probs=c(.025, .5, .975))
bm.modelsloperanef <- 0.07 + ranef(modelslopeb)$SubjectNumber[,2]
x <- list("MLE"=modelsloperanef, "Bayes"=bm.modelsloperanef)
stripchart(x,
main="Multiple stripchart for comparision \n Gray = Mean and SDs, Colored Lines = Quantiles",
xlab="Random Effects of Valence on RT",
ylab="Method",
col=c("red","blue"),
pch=16,
cex = 2,
cex.axis = 1.5,
cex.lab = 1.5,
xlim=c(-.10, .30)
)
View(randata)
cor(randata$ItemNumber, randata$item)
View(ran6)
summary(modelslope <- lmer(RT ~ val + (1 | SubjectNumber) + (val -1 | SubjectNumber), data = randata))
summary(modelint)
summary(modelslope)
modelslope <- lmer(RT ~ val + (val | SubjectNumber), data = randata)
summary(modelslope)
summary(modelint)
anova(modelint, modelslope)
library(foreign)
write.foreign(randata, "C:/Users/Niall/Documents/KZNB/randata.txt", "C:/Users/Niall/Documents/KZNB/randata.sas",   package="SAS")
selfrelplot <- ggplot(data=randata, aes(x=val, y=RT)) +
geom_jitter(aes(color=as.factor(val)), position = position_jitter(width = .2), size=1.5) +
labs(title = "RT by Valence -- Hassin Data", x="id", y="RT") +
stat_summary(aes(group=val), fun.y = mean, geom="point", colour="black", size=2) +
stat_summary(fun.data=mean_cl_boot, geom='errorbar', size = .5) +
scale_color_manual(values=c("orangered3", "green4")) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position='none',
plot.title = element_text(lineheight=.8, face="bold"),
axis.title.y = element_text(face="bold", vjust=0.5),
axis.title.x = element_text(face="bold", vjust=-0.35)) +
facet_wrap(~SubjectNumber)
selfrelplot
#ggsave(selfrelplot, file = "selfrelplot_N62_170218.pdf", height = 40/2.54, width = 64/2.54)
ggsave(selfrelplot, file = "selfrelplot_hassin_data.pdf", height = 40/2.54, width = 64/2.54)
modelslope <- lmer(log(RT) ~ val + (val | SubjectNumber), data = randata)
summary(modelslope)
stripchart(ran6mod2ranef, pch=21, bg="skyblue", cex=2, lwd=2,
xlim=c(-20, -9), xlab="Difference in Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-18.6, -15.14, -12.21), col = c("red", "black", "red"),
lwd = 3)
stripchart(x,
main="Multiple stripchart for comparision \n Gray = Mean and SDs, Colored Lines = Quantiles",
xlab="Random Effects of Valence on RT",
ylab="Method",
col=c("red","blue"),
pch=16,
cex = 2,
cex.axis = 1.5,
cex.lab = 1.5,
xlim=c(-.10, .30)
)
abline(v=c(-.02, .05, .26), col = c("darkred", "darkred", "darkred"),
lty = c("dashed", "solid", "dashed"), lwd = 4)
abline(v=c(.0006, .054, .23), col = c("darkblue", "darkblue", "darkblue"),
lty = c("dashed", "solid", "dashed"), lwd = 4)
abline(v=c(-.09, .074, .24), col = c("darkgray", "darkgray", "darkgray"),
lty = c("dashed", "solid", "dashed"), lwd = 4)
plot(modelslopeb, pars = NA, parameters = NA, combo = c("dens",
"trace"), N = 5, exact_match = FALSE, theme = NULL, plot = TRUE,
ask = F, newpage = TRUE, device = NULL)
plot(post.modelslopeb$sd_SubjectNumber_Intercept, post.modelslopeb$sd_SubjectNumber_val)
hist(post.modelslopeb$cor_SubjectNumber_Intercept_val)
hist(post.modelslopeb$cor_SubjectNumber_Intercept_val, breaks = 50)
hist(post.modelslopeb$cor_SubjectNumber_Intercept_val, breaks = 50, xlim=c(.2,1.2))
hist(post.modelslopeb$cor_SubjectNumber_Intercept_val, breaks = 70, xlim=c(.2,1))
hist(post.modelslopeb$cor_SubjectNumber_Intercept_val, breaks = 80, xlim=c(.2,1))
hist(post.modelslopeb$cor_SubjectNumber_Intercept_val, breaks = 100, xlim=c(.2,1))
median(post.modelslopeb$cor_SubjectNumber_Intcept_val)
median(post.modelslopeb$cor_SubjectNumber_Intcept_val)
median(post.modelslopeb$sd_SubjectNumber_val)
median(post.modelslopeb$cor_SubjectNumber_Intercept_val)
hist(post.modelslopeb$sd_SubjectNumber_val, breaks=50)
pdf("random_ran6_valence_histo.pdf", width = 12, height = 9)
hist(post.ran6mod2b$sd_subject_congr, breaks = 50, main = paste("Posterior Distribution of Congruence Random Effect SD"), xlab="Congruence Random Effect SD in Milliseconds", xlim = c(0, 30))
median(post.ran6mod2b$sd_subject_congr)
dev.off()
pdf("random_ran6_congruence_histo.pdf", width = 12, height = 9)
hist(post.ran6mod2b$sd_subject_congr, breaks = 50, main = paste("Posterior Distribution of Congruence Random Effect SD"), xlab="Congruence Random Effect SD in Milliseconds", xlim = c(0, 30))
median(post.ran6mod2b$sd_subject_congr)
dev.off()
pdf("random_ranval_valence_histo.pdf", width = 12, height = 9)
hist(post.modelslopeb$sd_SubjectNumber_val, breaks = 50, main = paste("Posterior Distribution of Valence Random Effect SD"), xlab="Valence Random Effect SD in Seconds", xlim = c(0, 30))
median(post.ran6mod2b$sd_subject_congr)
dev.off()
pdf("random_ranval_valence_histo.pdf", width = 12, height = 9)
hist(post.modelslopeb$sd_SubjectNumber_val, breaks = 50, main = paste("Posterior Distribution of Valence Random Effect SD"), xlab="Valence Random Effect SD in Seconds", xlim = c(0, 0.2))
median(post.ran6mod2b$sd_subject_congr)
dev.off()
write.foreign(randata, "C:/Users/Niall/Documents/KZNB/randata.txt", "C:/Users/Niall/Documents/KZNB/randata.sps",   package="SPSS")
save.image("~/KZNB/RanData_Heterogeneity_170315.RData")
=======
>>>>>>> 8e36505591d4ae87f35fa8f8faa132058efd4dc4
>>>>>>> 52d1307f8e8ce879c888f2960c94c021d69432f5
library(bmlm)
5^2
library()
getwd()
load("~/KZNB/ranface-ran6.RData")
View(pred)
summary(ranfacem1)
intervals(ranfacem1)
library(nlme)
intervals(ranfacem1)
confint(ranfacem1)
anova(ranfacem1, ranfacem)0
anova(ranfacem1, ranfacem)
anova(ranfacem1, ranfacem0)
View(ranface)
quantiles(ranface$RT)
quantile(ranface$RT)
confint(ranface$RT, nsim = 1500)
confint(ranfacem1, nsim = 1500)
View(ran6)
ran6$logrt <- log(ran6$rt)
ran6mod1 <- lmer(logrt ~ congr*ptimer + (1 | subject), data = ran6)
summary(ran6mod1)
confint(ran6mod1, oldNames = FALSE)
ran6mod2 <- lmer(logrt ~ congr*ptimer + (1 + congr | subject), data = ran6)
summary(ran6mod2)
confint(ran6mod2, oldNames = FALSE)
anova(ran6mod1, ran6mod2)
summary(ran6mod2)
anova(ran6mod1, ran6mod2)
quantile(ran6$logrt)
ran6mod2.ranef<-ranef(ran6mod2)$subject
ran6mod2.ranef$subject <- as.numeric(row.names(ran6mod2.ranef))
ran6mod2.ranef$congr <- ran6mod2.ranef$congr -0.022654
ordran6mod2.ranef <- ran6mod2.ranef[order(ran6mod2.ranef$congr), ]
ran6$pred <- predict(ran6mod2)
#Order ranface by Participant, Face-orientation, predicted value
ordran6 <- ran6[order(ran6$subject,
ran6$congr, ran6$pred), ]
quantile(ran6mod2.ranef$congr)
pdf("ran6-log-fitted-panels.pdf", width = 10, height = 8)
par(mfrow=c(3,7))
for (i in ordran6mod2.ranef$subject) {
plot(jitter(ordran6$congr[ordran6$subject==i], .25),
ordran6$rt[ordran6$subject==i],
ylab="RT", xlab="Congruence",
type="p", pch=19, col="blue", ylim=c(4.6, 7.1), xlim=c(-0.5, .5),
main=paste(round(ordran6mod2.ranef$congr[ordran6mod2.ranef$subject==i], digits=2), sep = " "))
lines(ordran6$congr[ordran6$subject==i],
ordran6$pred[ordran6$subject==i], lwd=5, col="red")
}
dev.off()
pdf("ran6-log-fitted-panels.pdf", width = 10, height = 8)
par(mfrow=c(3,7))
for (i in ordran6mod2.ranef$subject) {
plot(jitter(ordran6$congr[ordran6$subject==i], .25),
ordran6$logrt[ordran6$subject==i],
ylab="RT", xlab="Congruence",
type="p", pch=19, col="blue", ylim=c(4.6, 7.1), xlim=c(-0.5, .5),
main=paste(round(ordran6mod2.ranef$congr[ordran6mod2.ranef$subject==i], digits=2), sep = " "))
lines(ordran6$congr[ordran6$subject==i],
ordran6$pred[ordran6$subject==i], lwd=5, col="red")
}
dev.off()
pdf("ran6-log-fitted-panels.pdf", width = 10, height = 8)
par(mfrow=c(3,7))
for (i in ordran6mod2.ranef$subject) {
plot(jitter(ordran6$congr[ordran6$subject==i], .25),
ordran6$logrt[ordran6$subject==i],
ylab="RT", xlab="Congruence",
type="p", pch=19, col="blue", ylim=c(5.8, 6.8), xlim=c(-0.5, .5),
main=paste(round(ordran6mod2.ranef$congr[ordran6mod2.ranef$subject==i], digits=2), sep = " "))
lines(ordran6$congr[ordran6$subject==i],
ordran6$pred[ordran6$subject==i], lwd=5, col="red")
}
dev.off()
View(ran6)
quantile(ran6$rt)
quantile(ran6$rt, c(0, .025, .5, .75, .975, 1))
hist(ran6$rt)
hist(ran6$logrt)
pdf("ran6-log-fitted-panels.pdf", width = 10, height = 8)
pdf("ran6-log-fitted-panels.pdf", width = 10, height = 8)
par(mfrow=c(3,7))
for (i in ordran6mod2.ranef$subject) {
plot(jitter(ordran6$congr[ordran6$subject==i], .25),
ordran6$logrt[ordran6$subject==i],
ylab="RT", xlab="Congruence",
type="p", pch=19, col="blue", ylim=c(6.0, 7.0), xlim=c(-0.4, .6),
main=paste(round(ordran6mod2.ranef$congr[ordran6mod2.ranef$subject==i], digits=2), sep = " "))
lines(ordran6$congr[ordran6$subject==i],
ordran6$pred[ordran6$subject==i], lwd=5, col="red")
}
dev.off()
pdf("ran6-log-fitted-panels.pdf", width = 10, height = 8)
par(mfrow=c(3,7))
for (i in ordran6mod2.ranef$subject) {
plot(jitter(ordran6$congr[ordran6$subject==i], .25),
ordran6$logrt[ordran6$subject==i],
ylab="RT", xlab="Congruence",
type="p", pch=19, col="blue", ylim=c(6.0, 7.0), xlim=c(-0.6, .6),
main=paste(round(ordran6mod2.ranef$congr[ordran6mod2.ranef$subject==i], digits=2), sep = " "))
lines(ordran6$congr[ordran6$subject==i],
ordran6$pred[ordran6$subject==i], lwd=5, col="red")
}
dev.off()
pdf("ran6-log-fitted-panels.pdf", width = 10, height = 8)
par(mfrow=c(3,7))
for (i in ordran6mod2.ranef$subject) {
plot(jitter(ordran6$congr[ordran6$subject==i], .35),
ordran6$logrt[ordran6$subject==i],
ylab="RT", xlab="Congruence",
type="p", pch=19, col="blue", ylim=c(6.0, 7.0), xlim=c(-0.6, .6),
main=paste(round(ordran6mod2.ranef$congr[ordran6mod2.ranef$subject==i], digits=2), sep = " "))
lines(ordran6$congr[ordran6$subject==i],
ordran6$pred[ordran6$subject==i], lwd=5, col="red")
}
dev.off()
pdf("ran6-log-fitted-panels.pdf", width = 10, height = 8)
par(mfrow=c(3,7))
for (i in ordran6mod2.ranef$subject) {
plot(jitter(ordran6$congr[ordran6$subject==i], .35),
jitter(ordran6$logrt[ordran6$subject==i], .1),
ylab="RT", xlab="Congruence",
type="p", pch=19, col="blue", ylim=c(6.0, 7.0), xlim=c(-0.6, .6),
main=paste(round(ordran6mod2.ranef$congr[ordran6mod2.ranef$subject==i], digits=2), sep = " "))
lines(ordran6$congr[ordran6$subject==i],
ordran6$pred[ordran6$subject==i], lwd=5, col="red")
}
dev.off()
pdf("ran6-log-fitted-panels.pdf", width = 10, height = 8)
par(mfrow=c(3,7))
for (i in ordran6mod2.ranef$subject) {
plot(jitter(ordran6$congr[ordran6$subject==i], .35),
jitter(ordran6$logrt[ordran6$subject==i], .1),
ylab="RT", xlab="Congruence",
type="p", pch=1, col="blue", ylim=c(6.0, 7.0), xlim=c(-0.6, .6),
main=paste(round(ordran6mod2.ranef$congr[ordran6mod2.ranef$subject==i], digits=2), sep = " "))
lines(ordran6$congr[ordran6$subject==i],
ordran6$pred[ordran6$subject==i], lwd=5, col="red")
}
dev.off()
pdf("ran6-log-fitted-panels.pdf", width = 10, height = 8)
par(mfrow=c(3,7))
for (i in ordran6mod2.ranef$subject) {
plot(jitter(ordran6$congr[ordran6$subject==i], .35),
jitter(ordran6$logrt[ordran6$subject==i], .15),
ylab="RT", xlab="Congruence",
type="p", pch=1, col="blue", ylim=c(6.0, 7.0), xlim=c(-0.55, .55),
main=paste(round(ordran6mod2.ranef$congr[ordran6mod2.ranef$subject==i], digits=2), sep = " "))
lines(ordran6$congr[ordran6$subject==i],
ordran6$pred[ordran6$subject==i], lwd=5, col="red")
}
dev.off()
pdf("ran6-fitted-panels.pdf", width = 10, height = 8)
par(mfrow=c(3,7))
for (i in ordran6mod2.ranef$subject) {
plot(jitter(ordran6$congr[ordran6$subject==i], .25),
ordran6$rt[ordran6$subject==i],
ylab="RT", xlab="Congruence",
type="p", pch=19, col="blue", ylim=c(200, 1100), xlim=c(-0.5, .5),
main=paste(round(ordran6mod2.ranef$congr[ordran6mod2.ranef$subject==i], digits=3), sep = " "))
lines(ordran6$congr[ordran6$subject==i],
ordran6$pred[ordran6$subject==i], lwd=5, col="red")
}
dev.off()
quantile(ran6mod2ranef$congr, probs=c(.025, .5, .975))
ran6mod2.ranef$congr <- ran6mod2.ranef$congr -0.022654
quantile(ran6mod2ranef$congr, probs=c(.025, .5, .975))
ran6mod2.ranef<-ranef(ran6mod2)$subject
ran6mod2.ranef$subject <- as.numeric(row.names(ran6mod2.ranef))
ran6mod2.ranef$congr <- ran6mod2.ranef$congr -0.022654
ordran6mod2.ranef <- ran6mod2.ranef[order(ran6mod2.ranef$congr), ]
#Add Predicted Values to ranface
ran6$pred <- predict(ran6mod2)
#Order ranface by Participant, Face-orientation, predicted value
ordran6 <- ran6[order(ran6$subject,
ran6$congr, ran6$pred), ]
pdf("ran6-log-fitted-panels.pdf", width = 10, height = 8)
par(mfrow=c(3,7))
for (i in ordran6mod2.ranef$subject) {
plot(jitter(ordran6$congr[ordran6$subject==i], .35),
jitter(ordran6$logrt[ordran6$subject==i], .15),
ylab="RT", xlab="Congruence",
type="p", pch=1, col="blue", ylim=c(6.0, 7.0), xlim=c(-0.55, .55),
main=paste(round(ordran6mod2.ranef$congr[ordran6mod2.ranef$subject==i], digits=2), sep = " "))
lines(ordran6$congr[ordran6$subject==i],
ordran6$pred[ordran6$subject==i], lwd=5, col="red")
}
dev.off()
quantile(ran6mod2.ranef$congr)
quantile(ran6mod2ranef$congr, probs=c(.025, .5, .975))
quantile(ran6mod2.ranef$congr, probs=c(.025, .5, .975))
pdf("random_ran6_log_dotplot.pdf", width = 16, height = 8)
stripchart(ran6mod2ranef, pch=21, bg="skyblue", cex=2, lwd=2,
xlim=c(-19, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
dev.off()
pdf("random_ran6_log_dotplot.pdf", width = 16, height = 8)
stripchart(ran6mod2.ranef$congr, pch=21, bg="skyblue", cex=2, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
dev.off()
pdf("random_ran6_log_dotplot.pdf", width = 16, height = 8)
stripchart(ran6mod2.ranef$congr, pch=1, bg="skyblue", cex=2, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
dev.off()
pdf("random_ran6_log_dotplot.pdf", width = 16, height = 8)
stripchart(jitter(ran6mod2.ranef$congr), pch=1, bg="skyblue", cex=2, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
dev.off()
pdf("random_ran6_log_dotplot.pdf", width = 16, height = 8)
stripchart(jitter(ran6mod2.ranef$congr, .2), pch=1, bg="skyblue", cex=2, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
dev.off()
#Add Predicted Values to ranface
pdf("random_ran6_log_dotplot.pdf", width = 16, height = 8)
stripchart(jitter(ran6mod2.ranef$congr, .2), pch=1, bg="skyblue", cex=2, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
dev.off()
pdf("random_ran6_log_dotplot.pdf", width = 16, height = 8)
stripchart(jitter(ran6mod2.ranef$congr, .5), pch=1, bg="skyblue", cex=2, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
dev.off()
pdf("random_ran6_log_dotplot.pdf", width = 16, height = 8)
pdf("random_ran6_log_dotplot.pdf", width = 16, height = 8)
stripchart(ran6mod2.ranef$congr, pch=1, bg="skyblue", cex=2, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
dev.off()
summary(ran6mod2)
confint(ran6mod2, parm="beta_", oldNames = FALSE)
confint(ran6mod2, parm="theta_", oldNames = FALSE)
confint(ran6mod2, parm=c(1:4), oldNames = FALSE)
confint(ran6mod2, parm=c5, oldNames = FALSE)
confint(ran6mod2, parm=5, oldNames = FALSE)
summary(ran6mod2)
anova(ran6mod1, ran6mod2)
stripchart(ran6mod2.ranef$congr, pch=1, bg="skyblue", cex=2, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
windows()
stripchart(ran6mod2.ranef$congr, pch=1, bg="skyblue", cex=2, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
windows()
stripchart(ran6mod2.ranef$congr, pch=1, bg="skyblue", cex=3, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
windows()
stripchart(ran6mod2.ranef$congr, pch=1, bg="skyblue", cex=3, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log Reaction Times between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
pdf("random_ran6_log_dotplot.pdf", width = 7, height = 2.5)
pdf("random_ran6_log_dotplot.pdf", width = 7, height = 2.5)
stripchart(ran6mod2.ranef$congr, pch=1, bg="skyblue", cex=3, lwd=2,
xlim=c(-.027, -0), xlab="Difference in log RT between Congruent and Incongruent Conditions", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
dev.off()
pdf("random_ran6_log_dotplot.pdf", width = 7, height = 2.5)
stripchart(ran6mod2.ranef$congr, pch=1, bg="skyblue", cex=3, lwd=2,
xlim=c(-.027, -0), xlab="Congruent vs. Incongruent Differences in log RT", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
dev.off()
pdf("random_ran6_log_dotplot.pdf", width = 8, height = 3.0)
stripchart(ran6mod2.ranef$congr, pch=1, bg="skyblue", cex=3, lwd=2,
xlim=c(-.027, -0), xlab="Heterogeneity in Congruency Effect (log RT units)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.02612950, -0.02274863, -0.01965485), col = c("red", "black", "red"),
lwd = 3)
dev.off()
pdf("ranface-ranef-dotplot.pdf", width = 8, height = 3)
stripchart(ranfacem1.ranef$fo1, pch=1, bg="skyblue", cex=3, lwd=2,
xlim=c(-0.45, .05), xlab="Heterogeneity Face Orientation Effect (logRT units)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.36, -0.21, -.01), col = c("red", "black", "red"),
lwd = 3)
dev.off()
pdf("ranface-ranef-log-dotplot.pdf", width = 8, height = 3)
stripchart(ranfacem1.ranef$fo1, pch=1, bg="skyblue", cex=3, lwd=2,
xlim=c(-0.45, .05), xlab="Heterogeneity in Face Orientation Effect (logRT units)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-0.36, -0.21, -.01), col = c("red", "black", "red"),
lwd = 3)
dev.off()
summary(rndbrm2)
c(-162 - 2*143, -162 + 2*143)
143/162
-448/162
124/162
save.image("~/KZNB/ranface-ran6.RData")
load("~/KZNB/rndtzz.Rdata.RData")
summary(mle2aa)
summary(mle3aa)
confmle3aa
exp(6.86632)
exp(6.86632 -0.16157)
exp(6.86632)- exp(6.86632 --0.16157)
exp(c(-0.20647785, -0.1188546))
ranef.mle3aa<- -0.16157 + ranef(mle3aa)$id[,2] #ValencE column
quantile(ranef.mle3aa, probs=c(.025, .975))
quantile(ranef.mle3aa, probs=c(0, 1))
c(-0.16157 - 2*0.125, -0.16157 + 2*0.125)
stripchart(ranef.mle3bb, pch=21, bg="red", cex=3.5, lwd=2,
xlim=c(-.4, .0286), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.332, -0.16157, .0068), col = c("red", "black", "red"),
lwd = 3)
stripchart(ranef.mle3aa, pch=21, bg="red", cex=3.5, lwd=2,
xlim=c(-450, 50), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-382, -162.01, 16.9), col = c("red", "black", "red"),
lwd = 3)
stripchart(ranef.mle3bb, pch=21, bg="red", cex=3.5, lwd=2,
xlim=c(-.4, .0286), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.332, -0.16157, .0068), col = c("red", "black", "red"),
lwd = 3)
stripchart(ranef.mle3bb, pch=21, bg="red", cex=3.5, lwd=2,
xlim=c(-.4, .0286), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.332, -0.16157, .0068), col = c("red", "black", "red"),
lwd = 3)
stripchart(ranef.mle3aa, pch=21, bg="red", cex=3.5, lwd=2,
xlim=c(-.4, .0286), xlab="Trait Valence Effect (in Milliseconds)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.332, -0.16157, .0068), col = c("red", "black", "red"),
lwd = 3)
stripchart(ranef.mle3aa, pch=21, bg="red", cex=3.5, lwd=2,
xlim=c(-.4, .0286), xlab="Trait Valence Effect (logRT units)", cex.axis=1.5, cex.lab=1.5)
abline(v=c(-.332, -0.16157, .0068), col = c("red", "black", "red"),
lwd = 3)
quantile(ranef.mle3aa, probs=c(.025, .975))
View(aggs1aawide)
View(aggs1aa)
summary(aggs1aa.out)
summary(aggs1aa.out)
summary(mle2aa)
